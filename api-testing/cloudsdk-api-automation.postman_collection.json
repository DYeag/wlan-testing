{
	"info": {
		"_postman_id": "9e1883ef-e6a9-4fb1-a283-8328bb96b5eb",
		"name": "cloudsdk-api-automation",
		"description": "APIs that provide services for provisioning, monitoring, and history retrieval of various data elements of CMAP and CloudSDK.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "management",
			"item": [
				{
					"name": "Get access webtoken - to be used as Bearer token header for all other API requests.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access-token\", data.access_token);",
									"Â ",
									"tests[\"Successful POST requests\"] = responseCode.code === 200;",
									"tests[\"TokenType of correct type \"] = data.token_type === \"Bearer\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\",\n    \"refreshToken\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/management/v1/oauth2/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"management",
								"v1",
								"oauth2",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "this object is returned in the cases when an API throws an exception",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"support@example.com\",\n    \"password\": \"support\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/management/v1/oauth2/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"management",
										"v1",
										"oauth2",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"dolore nulla esse amet ea\",\n \"refresh_token\": \"eu velit\",\n \"id_token\": \"do irure cillum\",\n \"token_type\": \"sit elit\",\n \"expires_in\": -28128530,\n \"idle_timeout\": 42848738,\n \"aclTemplate\": {\n  \"aclTemplate\": {\n   \"Read\": false,\n   \"ReadWrite\": true,\n   \"ReadWriteCreate\": true,\n   \"Delete\": false,\n   \"PortalLogin\": true\n  }\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "portal",
			"item": [
				{
					"name": "customer",
					"item": [
						{
							"name": "Get Customer By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"8882 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8882 Returned requested customer\", function () {",
											"    var jsonData = pm.response.json();",
											"    var getCustomerId = JSON.stringify(jsonData.id).replace(/[\\[\\]\"]+/g,\"\")",
											"    pm.expect(getCustomerId).to.eql(pm.environment.get(\"customerId\"));",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/customer?customerId={{customerId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"customer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "{{customerId}}",
											"description": "(Required) customer id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/customer?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"customer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/customer?customerId=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"customer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 72722324,\n \"email\": \"doajZv@rFqryCRQiakFU.vlcg\",\n \"name\": \"sint amet est\",\n \"lastModifiedTimestamp\": 29707538,\n \"details\": {\n  \"autoProvisioning\": {\n   \"enabled\": false,\n   \"locationId\": 87731070,\n   \"equipmentProfileIdPerModel\": {}\n  }\n },\n \"createdTimestamp\": 1929867\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Location",
					"item": [
						{
							"name": "Create new Location",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5907 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5907 Created values match configured location values\", function () {",
											"    var create = pm.request.body;",
											"    var createJson = JSON.parse(create);",
											"    delete createJson.id;",
											"    delete createJson.lastModifiedTimestamp;",
											"    delete createJson.createdTimestamp;",
											"    var create = JSON.stringify(createJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.id;",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.createdTimestamp;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.eql(create);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"locationProfileId\", data.id);",
											"postman.setEnvironmentVariable(\"createdTimeLocation\", data.createdTimestamp);",
											"postman.setEnvironmentVariable(\"modifiedTimeLocation\", data.lastModifiedTimestamp);",
											"var newLocationProfile = JSON.stringify(data);",
											"postman.setEnvironmentVariable(\"newLocationProfile\", newLocationProfile);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Location\",\n    \"id\": 1,\n    \"parentId\": 0,\n    \"locationType\": \"COUNTRY\",\n    \"customerId\": 2,\n    \"name\": \"API Test Location\",\n    \"details\": {\n        \"model_type\": \"LocationDetails\",\n        \"countryCode\": \"US\",\n        \"dailyActivityDetails\": {\n            \"SUNDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"MONDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"TUESDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"WEDNESDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"THURSDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"FRIDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"SATURDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            }\n        },\n        \"maintenanceWindow\": null,\n        \"rrmEnabled\": true,\n        \"timezone\": \"US/Eastern\"\n    },\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								}
							]
						},
						{
							"name": "Get Location",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5908 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5908 Values match created location\", function () {",
											"    var newLocationProfile = pm.environment.get(\"newLocationProfile\")",
											"    var jsonData = pm.response.json();",
											"    var jsonString = JSON.stringify(jsonData)",
											"    pm.expect(jsonString).to.eql(newLocationProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location?locationId={{locationProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									],
									"query": [
										{
											"key": "locationId",
											"value": "{{locationProfileId}}",
											"description": "(Required) location id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								}
							]
						},
						{
							"name": "Update Location",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5910 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5910 Updated value(s) pushed to AP profile\", function () {",
											"    var updated = pm.request.body",
											"    var updatedJson = JSON.parse(updated);",
											"    delete updatedJson.lastModifiedTimestamp;",
											"    var updated = JSON.stringify(updatedJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    console.log('Updated location '+jsonData.id)",
											"    delete jsonData.lastModifiedTimestamp;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"",
											"    pm.expect(jsonString).to.eql(updated);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"modifiedTimeApProfile\", data.lastModifiedTimestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Location\",\n    \"id\": {{locationProfileId}},\n    \"parentId\": 0,\n    \"locationType\": \"COUNTRY\",\n    \"customerId\": 2,\n    \"name\": \"API Test Location - Updated\",\n    \"details\": {\n        \"model_type\": \"LocationDetails\",\n        \"countryCode\": \"US\",\n        \"dailyActivityDetails\": {\n            \"SUNDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"MONDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"TUESDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"WEDNESDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"THURSDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"FRIDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            },\n            \"SATURDAY\": {\n                \"model_type\": \"LocationActivityDetails\",\n                \"busyTime\": \"13:30\",\n                \"quietTime\": \"3:00\",\n                \"timezone\": \"US/Eastern\"\n            }\n        },\n        \"maintenanceWindow\": null,\n        \"rrmEnabled\": true,\n        \"timezone\": \"US/Eastern\"\n    },\n    \"createdTimestamp\": {{createdTimeLocation}},\n    \"lastModifiedTimestamp\": {{modifiedTimeLocation}}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": 2,\n    \"locationType\": \"COUNTRY\",\n    \"name\": \"new location\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/location",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						},
						{
							"name": "Delete Location",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5909 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5909 Proper location deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    var profileId = parseInt(pm.environment.get(\"locationProfileId\"));",
											"    console.log(\"deleted profile \"+jsonData.id)",
											"    pm.expect(jsonData.id).to.equal(profileId);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location?locationId={{locationProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location"
									],
									"query": [
										{
											"key": "locationId",
											"value": "{{locationProfileId}}",
											"description": "(Required) location id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location?locationId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location"
											],
											"query": [
												{
													"key": "locationId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"customerId\": 2,\n \"locationType\": \"COUNTRY\",\n \"name\": \"new location\"\n}"
								}
							]
						},
						{
							"name": "Get Locations By a set of ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8881 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8881 Returned locations match requested locations\", function () {",
											"var jsonData = pm.response.json();",
											"var locationIds = [];",
											"for (var i in jsonData) {",
											"    if(jsonData[i].hasOwnProperty('id')) {",
											"        locationIds.push(jsonData[i].id);",
											"    }",
											"}",
											"locations = JSON.stringify(locationIds).replace(/[\\[\\]\"]+/g,\"\")",
											"locationIdSet = pm.environment.get(\"locationIdSet\")",
											"pm.expect(locations).to.equal(locationIdSet)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location/inSet?locationIdSet={{locationIdSet}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location",
										"inSet"
									],
									"query": [
										{
											"key": "locationIdSet",
											"value": "{{locationIdSet}}",
											"description": "(Required) set of location ids"
										}
									]
								},
								"description": "Ensure CloudSDK returns all locations requested"
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/inSet?locationIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"inSet"
											],
											"query": [
												{
													"key": "locationIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/inSet?locationIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"inSet"
											],
											"query": [
												{
													"key": "locationIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"customerId\": 2,\n  \"locationType\": \"COUNTRY\",\n  \"name\": \"new location\"\n },\n {\n  \"customerId\": 2,\n  \"locationType\": \"COUNTRY\",\n  \"name\": \"new location\"\n }\n]"
								}
							]
						},
						{
							"name": "Get Locations By customerId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8935 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8935 Returned locations are only from customer\", function () {",
											"var jsonData = pm.response.json();",
											"    _.each(jsonData.items, (item) => {",
											"        pm.expect(item.customerId).to.equal(parseInt(pm.environment.get('customerId')))",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/location/forCustomer?customerId={{customerId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"location",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "{{customerId}}",
											"description": "(Required) customer id"
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options",
											"disabled": true
										},
										{
											"key": "paginationContext",
											"value": "",
											"description": "(Required) pagination context",
											"disabled": true
										}
									]
								},
								"description": "Test that only locations in the customer ID are being returned"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"customerId\": 2,\n   \"locationType\": \"COUNTRY\",\n   \"name\": \"new location\"\n  },\n  {\n   \"customerId\": 2,\n   \"locationType\": \"COUNTRY\",\n   \"name\": \"new location\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/location/forCustomer?customerId=<long>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"location",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						}
					]
				},
				{
					"name": "equipment",
					"item": [
						{
							"name": "Create new Equipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8973 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8973 Created values match configured equipment values\", function () {",
											"    var create = pm.request.body;",
											"    var createJson = JSON.parse(create);",
											"    delete createJson.id;",
											"    delete createJson.lastModifiedTimestamp;",
											"    delete createJson.createdTimestamp;",
											"    //Delete radio map because they may be in a different order on create of a new equipment profile",
											"    delete createJson.details.radioMap;",
											"    var create = JSON.stringify(createJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.id;",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.createdTimestamp;",
											"    //Delete radio map because they may be in a different order on create of a new equipment profile",
											"    delete jsonData.details.radioMap;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.eql(create);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"equipmentId\", data.id);",
											"postman.setEnvironmentVariable(\"createdTimeEquipment\", data.createdTimestamp);",
											"postman.setEnvironmentVariable(\"modifiedTimeEquipment\", data.lastModifiedTimestamp);",
											"var newEquipmentProfile = JSON.stringify(data);",
											"postman.setEnvironmentVariable(\"newEquipmentProfile\", newEquipmentProfile);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Equipment\",\n    \"id\": 0,\n    \"customerId\": 2,\n    \"profileId\": 5,\n    \"locationId\": 8,\n    \"equipmentType\": \"AP\",\n    \"inventoryId\": \"Open_AP_0123456789012\",\n    \"name\": \"API Automation AP\",\n    \"details\": {\n        \"model_type\": \"ApElementConfiguration\",\n        \"equipmentModel\": \"MR8300-CA\",\n        \"elementConfigVersion\": \"AP-V1\",\n        \"equipmentType\": \"AP\",\n        \"deviceMode\": \"standaloneAP\",\n        \"gettingIP\": \"dhcp\",\n        \"staticIP\": null,\n        \"staticIpMaskCidr\": null,\n        \"staticIpGw\": null,\n        \"gettingDNS\": \"dhcp\",\n        \"staticDnsIp1\": null,\n        \"staticDnsIp2\": null,\n        \"peerInfoList\": [],\n        \"deviceName\": \"API Automation AP\",\n        \"locationData\": null,\n        \"locallyConfiguredMgmtVlan\": 0,\n        \"locallyConfigured\": false,\n        \"deploymentType\": \"CEILING\",\n        \"syntheticClientEnabled\": null,\n        \"frameReportThrottleEnabled\": true,\n        \"antennaType\": \"OMNI\",\n        \"costSavingEventsEnabled\": true,\n        \"forwardMode\": \"BRIDGE\",\n        \"radioMap\": {\n            \"is5GHzL\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHzL\",\n                \"channelNumber\": 36,\n                \"manualChannelNumber\": 36,\n                \"backupChannelNumber\": 44,\n                \"manualBackupChannelNumber\": 44,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": [\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 52,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 36,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 56,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 40,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 60,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 44,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 64,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 48,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    }\n                ]\n            },\n            \"is5GHz\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHz\",\n                \"channelNumber\": 36,\n                \"manualChannelNumber\": 36,\n                \"backupChannelNumber\": 153,\n                \"manualBackupChannelNumber\": 153,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": []\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is2dot4GHz\",\n                \"channelNumber\": 6,\n                \"manualChannelNumber\": 6,\n                \"backupChannelNumber\": 11,\n                \"manualBackupChannelNumber\": 11,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": [\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 1,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 2,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 3,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 4,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 5,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 6,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 7,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 8,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 9,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 10,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 11,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    }\n                ]\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHzU\",\n                \"channelNumber\": 149,\n                \"manualChannelNumber\": 149,\n                \"backupChannelNumber\": 157,\n                \"manualBackupChannelNumber\": 157,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": [\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 161,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 100,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 132,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 165,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 104,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 136,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 108,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 140,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 112,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 144,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 116,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 149,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 120,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 153,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 124,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 157,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 128,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    }\n                ]\n            }\n        },\n        \"advancedRadioMap\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHz\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is2dot4GHz\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 20,\n                        \"minLoadFactor\": 50\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHzU\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHzL\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            }\n        }\n    },\n    \"latitude\": null,\n    \"longitude\": null,\n    \"baseMacAddress\": {\n        \"model_type\": \"MacAddress\",\n        \"address\": \"ASNFqrvM\",\n        \"addressAsString\": \"01:23:45:aa:bb:cc\"\n    },\n    \"serial\": \"0123456789012\",\n    \"createdTimestamp\": 1615324804831,\n    \"lastModifiedTimestamp\": 1615324804831\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								}
							]
						},
						{
							"name": "Get Equipment By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8974 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8974 Values match created Equipment Profile\", function () {",
											"    var newProfile = pm.environment.get(\"newEquipmentProfile\");",
											"    var newProfileJson = JSON.parse(newProfile);",
											"    //Delete radioMap because they may be in a different order on create of a new equipment profile",
											"    delete newProfileJson.details.radioMap;",
											"    var newProfile = JSON.stringify(newProfileJson)",
											"",
											"    var jsonData = pm.response.json();",
											"    //Delete radioMap because they may be in a different order on create of a new equipment profile",
											"    delete jsonData.details.radioMap;",
											"    var jsonString = JSON.stringify(jsonData)",
											"    ",
											"    pm.expect(jsonString).to.eql(newProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment?equipmentId={{equipmentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "{{equipmentId}}",
											"description": "(Required) equipment id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						},
						{
							"name": "Update Equipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"CXYZ Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"CXYZ Created values match modified equipment values\", function () {",
											"    var update = pm.request.body;",
											"    var updateJson = JSON.parse(update);",
											"    delete updateJson.lastModifiedTimestamp;",
											"    //Delete radio map because they may be in a different order on create of a new equipment profile",
											"    delete updateJson.details.radioMap;",
											"    var update = JSON.stringify(updateJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.lastModifiedTimestamp;",
											"    //Delete radio map because they may be in a different order on create of a new equipment profile",
											"    delete jsonData.details.radioMap;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.eql(update);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Equipment\",\n    \"id\": {{equipmentId}},\n    \"customerId\": 2,\n    \"profileId\": 5,\n    \"locationId\": 8,\n    \"equipmentType\": \"AP\",\n    \"inventoryId\": \"Open_AP_0123456789012\",\n    \"name\": \"API Automation AP - Updated\",\n    \"details\": {\n        \"model_type\": \"ApElementConfiguration\",\n        \"equipmentModel\": \"MR8300-CA\",\n        \"elementConfigVersion\": \"AP-V1\",\n        \"equipmentType\": \"AP\",\n        \"deviceMode\": \"standaloneAP\",\n        \"gettingIP\": \"dhcp\",\n        \"staticIP\": null,\n        \"staticIpMaskCidr\": null,\n        \"staticIpGw\": null,\n        \"gettingDNS\": \"dhcp\",\n        \"staticDnsIp1\": null,\n        \"staticDnsIp2\": null,\n        \"peerInfoList\": [],\n        \"deviceName\": \"API Automation AP - Updated\",\n        \"locationData\": null,\n        \"locallyConfiguredMgmtVlan\": 0,\n        \"locallyConfigured\": false,\n        \"deploymentType\": \"CEILING\",\n        \"syntheticClientEnabled\": null,\n        \"frameReportThrottleEnabled\": true,\n        \"antennaType\": \"OMNI\",\n        \"costSavingEventsEnabled\": true,\n        \"forwardMode\": \"BRIDGE\",\n        \"radioMap\": {\n            \"is5GHzL\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHzL\",\n                \"channelNumber\": 36,\n                \"manualChannelNumber\": 36,\n                \"backupChannelNumber\": 44,\n                \"manualBackupChannelNumber\": 44,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": [\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 52,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 36,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 56,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 40,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 60,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 44,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 64,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 48,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    }\n                ]\n            },\n            \"is5GHz\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHz\",\n                \"channelNumber\": 36,\n                \"manualChannelNumber\": 36,\n                \"backupChannelNumber\": 153,\n                \"manualBackupChannelNumber\": 153,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": []\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is2dot4GHz\",\n                \"channelNumber\": 6,\n                \"manualChannelNumber\": 6,\n                \"backupChannelNumber\": 11,\n                \"manualBackupChannelNumber\": 11,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": [\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 1,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 2,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 3,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 4,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 5,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 6,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 7,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 8,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 9,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 10,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 11,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 20\n                    }\n                ]\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"ElementRadioConfiguration\",\n                \"radioType\": \"is5GHzU\",\n                \"channelNumber\": 149,\n                \"manualChannelNumber\": 149,\n                \"backupChannelNumber\": 157,\n                \"manualBackupChannelNumber\": 157,\n                \"rxCellSizeDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"probeResponseThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"clientDisconnectThresholdDb\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": -90\n                },\n                \"eirpTxPower\": {\n                    \"model_type\": \"SourceSelectionValue\",\n                    \"source\": \"profile\",\n                    \"value\": 18\n                },\n                \"perimeterDetectionEnabled\": true,\n                \"bestAPSteerType\": \"both\",\n                \"deauthAttackDetection\": null,\n                \"allowedChannelsPowerLevels\": [\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 161,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 100,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 132,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 165,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 104,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 136,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 108,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 140,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 112,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 144,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 116,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 149,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 120,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 153,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 124,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 157,\n                        \"powerLevel\": 18,\n                        \"dfs\": false,\n                        \"channelWidth\": 80\n                    },\n                    {\n                        \"model_type\": \"ChannelPowerLevel\",\n                        \"channelNumber\": 128,\n                        \"powerLevel\": 18,\n                        \"dfs\": true,\n                        \"channelWidth\": 80\n                    }\n                ]\n            }\n        },\n        \"advancedRadioMap\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHz\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is2dot4GHz\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 20,\n                        \"minLoadFactor\": 50\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHzU\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioConfiguration\",\n                \"radioType\": \"is5GHzL\",\n                \"radioAdminState\": \"enabled\",\n                \"fragmentationThresholdBytes\": 2346,\n                \"uapsdState\": \"enabled\",\n                \"stationIsolation\": \"disabled\",\n                \"multicastRate\": {\n                    \"model_type\": \"SourceSelectionMulticast\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"managementRate\": {\n                    \"model_type\": \"SourceSelectionManagement\",\n                    \"source\": \"profile\",\n                    \"value\": \"auto\"\n                },\n                \"bestApSettings\": {\n                    \"model_type\": \"SourceSelectionSteering\",\n                    \"source\": \"manual\",\n                    \"value\": {\n                        \"model_type\": \"RadioBestApSettings\",\n                        \"mlComputed\": true,\n                        \"dropInSnrPercentage\": 30,\n                        \"minLoadFactor\": 40\n                    }\n                },\n                \"legacyBSSRate\": \"enabled\",\n                \"dtimPeriod\": 2,\n                \"deauthAttackDetection\": null\n            }\n        }\n    },\n    \"latitude\": null,\n    \"longitude\": null,\n    \"baseMacAddress\": {\n        \"model_type\": \"MacAddress\",\n        \"address\": \"ASNFqrvM\",\n        \"addressAsString\": \"01:23:45:aa:bb:cc\"\n    },\n    \"serial\": \"0123456789012\",\n    \"createdTimestamp\": {{createdTimeEquipment}},\n    \"lastModifiedTimestamp\": {{modifiedTimeEquipment}}\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/equipment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"equipmentType\": \"AP\",\n    \"customerId\": 2,\n    \"profileId\": 1,\n    \"locationId\": 2,\n    \"inventoryId\": \"example_ap\",\n    \"serial\": \"example_serial\",\n    \"name\": \"example AP\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/equipment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								}
							]
						},
						{
							"name": "Delete Equipment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"XYZ Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"CXYZ Proper equipment profile deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    var profileId = parseInt(pm.environment.get(\"equipmentId\"));",
											"    console.log(\"deleted profile \"+jsonData.id)",
											"    pm.expect(jsonData.id).to.equal(profileId);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/equipment?equipmentId={{equipmentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"equipment"
									],
									"query": [
										{
											"key": "equipmentId",
											"value": "{{equipmentId}}",
											"description": "(Required) equipment id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"equipmentType\": \"AP\",\n \"customerId\": 2,\n \"profileId\": 1,\n \"locationId\": 2,\n \"inventoryId\": \"example_ap\",\n \"serial\": \"example_serial\",\n \"name\": \"example AP\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/equipment?equipmentId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"equipment"
											],
											"query": [
												{
													"key": "equipmentId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						}
					]
				},
				{
					"name": "profile",
					"item": [
						{
							"name": "Create new Profile - SSID Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5901 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5901 Created values match configured SSID profile values\", function () {",
											"    var createProfile = pm.request.body;",
											"    var createProfileJson = JSON.parse(createProfile);",
											"    delete createProfileJson.id;",
											"    delete createProfileJson.lastModifiedTimestamp;",
											"    delete createProfileJson.createdTimestamp;",
											"    //Delete radio configs because they may be in a different order on create of a new SSID profile",
											"    delete createProfileJson.details.radioBasedConfigs;",
											"    delete createProfileJson.details.appliedRadios;",
											"    var createProfile = JSON.stringify(createProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.id;",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.createdTimestamp;",
											"    //Delete radio configs because they may be in a different order on create of a new SSID profile",
											"    delete jsonData.details.radioBasedConfigs;",
											"    delete jsonData.details.appliedRadios;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.equal(createProfile);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"ssidProfileId\", data.id);",
											"postman.setEnvironmentVariable(\"createdTimeSsidProfile\", data.createdTimestamp);",
											"postman.setEnvironmentVariable(\"modifiedTimeSsidProfile\", data.lastModifiedTimestamp);",
											"var newSsidProfile = JSON.stringify(data);",
											"postman.setEnvironmentVariable(\"newSsidProfile\", newSsidProfile);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": 4,\n    \"customerId\": 2,\n    \"profileType\": \"ssid\",\n    \"name\": \"API Automation SSID Profile\",\n    \"details\": {\n        \"model_type\": \"SsidConfiguration\",\n        \"ssid\": \"API_Automation\",\n        \"appliedRadios\": [\n            \"is5GHzU\",\n            \"is2dot4GHz\",\n            \"is5GHzL\",\n            \"is5GHz\"\n        ],\n        \"ssidAdminState\": \"enabled\",\n        \"secureMode\": \"wpa2OnlyPSK\",\n        \"vlanId\": 1,\n        \"dynamicVlan\": \"disabled\",\n        \"keyStr\": \"w1r3l3ss-fr33d0m\",\n        \"broadcastSsid\": \"enabled\",\n        \"keyRefresh\": 0,\n        \"noLocalSubnets\": false,\n        \"radiusServiceId\": 0,\n        \"radiusAcountingServiceInterval\": 60,\n        \"captivePortalId\": null,\n        \"bandwidthLimitDown\": 0,\n        \"bandwidthLimitUp\": 0,\n        \"clientBandwidthLimitDown\": 0,\n        \"clientBandwidthLimitUp\": 0,\n        \"videoTrafficOnly\": false,\n        \"radioBasedConfigs\": {\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            }\n        },\n        \"bonjourGatewayProfileId\": null,\n        \"enable80211w\": null,\n        \"wepConfig\": null,\n        \"forwardMode\": \"NAT\",\n        \"profileType\": \"ssid\",\n        \"radiusClientConfiguration\": {\n            \"model_type\": \"RadiusNasConfiguration\",\n            \"nasClientId\": \"DEFAULT\",\n            \"nasClientIp\": \"WAN_IP\",\n            \"userDefinedNasId\": null,\n            \"userDefinedNasIp\": null,\n            \"operatorId\": null\n        }\n    },\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"childProfileIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Get Profile By Id - SSID Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5904 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5904 Values match created SSID Profile\", function () {",
											"    var newProfile = pm.environment.get(\"newSsidProfile\");",
											"    var newProfileJson = JSON.parse(newProfile);",
											"    //Delete radioBasedConfigs because they may be in a different order on create of a new SSID profile",
											"    delete newProfileJson.details.radioBasedConfigs;",
											"    var newProfile = JSON.stringify(newProfileJson)",
											"",
											"    var jsonData = pm.response.json();",
											"    //Delete radioBasedConfigs because they may be in a different order on create of a new SSID profile",
											"    delete jsonData.details.radioBasedConfigs;",
											"    var jsonString = JSON.stringify(jsonData)",
											"    ",
											"    pm.expect(jsonString).to.eql(newProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId={{ssidProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{ssidProfileId}}",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Update Profile - SSID Profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5905 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5905 Updated value(s) pushed to SSID profile\", function () {",
											"    var updatedProfile = pm.request.body",
											"    var updatedProfileJson = JSON.parse(updatedProfile);",
											"    delete updatedProfileJson.lastModifiedTimestamp;",
											"    //Delete radioBasedConfigs because they may be in a different order on create of a new SSID profile",
											"    delete updatedProfileJson.details.radioBasedConfigs;",
											"    delete updatedProfileJson.details.appliedRadios;",
											"    var updatedProfile = JSON.stringify(updatedProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    console.log('Updated profile '+jsonData.id)",
											"    delete jsonData.lastModifiedTimestamp;",
											"    //Delete radioBasedConfigs because they may be in a different order on create of a new SSID profile",
											"    delete jsonData.details.radioBasedConfigs;",
											"    delete jsonData.details.appliedRadios;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"",
											"    pm.expect(jsonString).to.eql(updatedProfile);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"modifiedTimeApProfile\", data.lastModifiedTimestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": {{ssidProfileId}},\n    \"customerId\": 2,\n    \"profileType\": \"ssid\",\n    \"name\": \"API Automation SSID Profile - Updated\",\n    \"details\": {\n        \"model_type\": \"SsidConfiguration\",\n        \"ssid\": \"API_Automation\",\n        \"appliedRadios\": [\n            \"is5GHzL\",\n            \"is5GHzU\",\n            \"is2dot4GHz\",\n            \"is5GHz\"\n        ],\n        \"ssidAdminState\": \"enabled\",\n        \"secureMode\": \"open\",\n        \"vlanId\": 1,\n        \"dynamicVlan\": \"disabled\",\n        \"keyStr\": \"w1r3l3ss-fr33d0m\",\n        \"broadcastSsid\": \"enabled\",\n        \"keyRefresh\": 0,\n        \"noLocalSubnets\": false,\n        \"radiusServiceId\": 0,\n        \"radiusAcountingServiceInterval\": 60,\n        \"captivePortalId\": null,\n        \"bandwidthLimitDown\": 0,\n        \"bandwidthLimitUp\": 0,\n        \"clientBandwidthLimitDown\": 0,\n        \"clientBandwidthLimitUp\": 0,\n        \"videoTrafficOnly\": false,\n        \"radioBasedConfigs\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioBasedSsidConfiguration\",\n                \"enable80211r\": null,\n                \"enable80211k\": null,\n                \"enable80211v\": null\n            }\n        },\n        \"bonjourGatewayProfileId\": null,\n        \"enable80211w\": null,\n        \"wepConfig\": null,\n        \"forwardMode\": \"BRIDGE\",\n        \"profileType\": \"ssid\",\n        \"radiusClientConfiguration\": {\n            \"model_type\": \"RadiusNasConfiguration\",\n            \"nasClientId\": \"DEFAULT\",\n            \"nasClientIp\": \"WAN_IP\",\n            \"userDefinedNasId\": null,\n            \"userDefinedNasIp\": null,\n            \"operatorId\": null\n        }\n    },\n    \"createdTimestamp\": {{createdTimeSsidProfile}},\n    \"lastModifiedTimestamp\": {{modifiedTimeSsidProfile}},\n    \"childProfileIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Delete Profile - SSID Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5906 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5906 Proper SSID profile deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    var profileId = parseInt(pm.environment.get(\"ssidProfileId\"));",
											"    console.log(\"deleted profile \"+jsonData.id)",
											"    pm.expect(jsonData.id).to.equal(profileId);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId={{ssidProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{ssidProfileId}}",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								}
							]
						},
						{
							"name": "Create new Profile - RADIUS Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8977 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8977 Created values match configured RADIUS profile values\", function () {",
											"    var createProfile = pm.request.body;",
											"    var createProfileJson = JSON.parse(createProfile);",
											"    delete createProfileJson.id;",
											"    delete createProfileJson.lastModifiedTimestamp;",
											"    delete createProfileJson.createdTimestamp;",
											"    var createProfile = JSON.stringify(createProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.id;",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.createdTimestamp;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.eql(createProfile);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"radiusProfileId\", data.id);",
											"postman.setEnvironmentVariable(\"createdTimeRadiusProfile\", data.createdTimestamp);",
											"postman.setEnvironmentVariable(\"modifiedTimeRadiusProfile\", data.lastModifiedTimestamp);",
											"",
											"var newRadiusProfile = JSON.stringify(data);",
											"postman.setEnvironmentVariable(\"newRadiusProfile\", newRadiusProfile);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": 9,\n    \"customerId\": 2,\n    \"profileType\": \"radius\",\n    \"name\": \"Automation Radius Profile\",\n    \"details\": {\n        \"model_type\": \"RadiusProfile\",\n        \"primaryRadiusAuthServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"10.10.10.10\",\n            \"secret\": \"testsecret\",\n            \"port\": 1812,\n            \"timeout\": null\n        },\n        \"secondaryRadiusAuthServer\": null,\n        \"primaryRadiusAccountingServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"10.10.10.10\",\n            \"secret\": \"testsecret\",\n            \"port\": 1813,\n            \"timeout\": null\n        },\n        \"secondaryRadiusAccountingServer\": null,\n        \"profileType\": \"radius\"\n    },\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 1614955559272,\n    \"childProfileIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Get Profile By Id - RADIUS profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8979 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8979 Values match created AP Profile\", function () {",
											"    var newProfile = pm.environment.get(\"newRadiusProfile\")",
											"    var jsonData = pm.response.json();",
											"    var jsonString = JSON.stringify(jsonData)",
											"    pm.expect(jsonString).to.eql(newProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId={{radiusProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{radiusProfileId}}",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Update Profile - RADIUS Profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8980Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8980 Updated value(s) pushed to RADIUS profile\", function () {",
											"    var updatedProfile = pm.request.body",
											"    var updatedProfileJson = JSON.parse(updatedProfile);",
											"    delete updatedProfileJson.lastModifiedTimestamp;",
											"    var updatedProfile = JSON.stringify(updatedProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    console.log('Updated profile '+jsonData.id)",
											"    delete jsonData.lastModifiedTimestamp;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"",
											"    pm.expect(jsonString).to.eql(updatedProfile);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"modifiedTimeRadiusProfile\", data.lastModifiedTimestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": {{radiusProfileId}},\n    \"customerId\": 2,\n    \"profileType\": \"radius\",\n    \"name\": \"Automation Radius Profile - Updated\",\n    \"details\": {\n        \"model_type\": \"RadiusProfile\",\n        \"primaryRadiusAuthServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"10.10.10.100\",\n            \"secret\": \"testsecret\",\n            \"port\": 1812,\n            \"timeout\": null\n        },\n        \"secondaryRadiusAuthServer\": null,\n        \"primaryRadiusAccountingServer\": {\n            \"model_type\": \"RadiusServer\",\n            \"ipAddress\": \"10.10.10.100\",\n            \"secret\": \"testsecret\",\n            \"port\": 1813,\n            \"timeout\": null\n        },\n        \"secondaryRadiusAccountingServer\": null,\n        \"profileType\": \"radius\"\n    },\n    \"createdTimestamp\": {{createdTimeRadiusProfile}},\n    \"lastModifiedTimestamp\": {{modifiedTimeRadiusProfile}},\n    \"childProfileIds\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Delete Profile - RADIUS Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8978 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8978 Proper RADIUS profile deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    var profileId = parseInt(pm.environment.get(\"radiusProfileId\"));",
											"    console.log(\"deleted profile \"+jsonData.id)",
											"    pm.expect(jsonData.id).to.equal(profileId);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId={{radiusProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{radiusProfileId}}",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								}
							]
						},
						{
							"name": "Create new Profile - AP Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5897 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5897 Created values match configured AP profile values\", function () {",
											"    var createProfile = pm.request.body;",
											"    var createProfileJson = JSON.parse(createProfile);",
											"    delete createProfileJson.id;",
											"    delete createProfileJson.lastModifiedTimestamp;",
											"    delete createProfileJson.createdTimestamp;",
											"    var createProfile = JSON.stringify(createProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.id;",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.createdTimestamp;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.eql(createProfile);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"apProfileId\", data.id);",
											"postman.setEnvironmentVariable(\"createdTimeApProfile\", data.createdTimestamp);",
											"postman.setEnvironmentVariable(\"modifiedTimeApProfile\", data.lastModifiedTimestamp);",
											"postman.setEnvironmentVariable(\"childProfileIds\", data.childProfileIds);",
											"//console.log(pm.environment.get(\"childProfileIds\"))",
											"var newApProfile = JSON.stringify(data);",
											"postman.setEnvironmentVariable(\"newApProfile\", newApProfile);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": 6,\n    \"customerId\": 2,\n    \"profileType\": \"equipment_ap\",\n    \"name\": \"API Automation AP Profile\",\n    \"details\": {\n        \"model_type\": \"ApNetworkConfiguration\",\n        \"networkConfigVersion\": \"AP-1\",\n        \"equipmentType\": \"AP\",\n        \"vlanNative\": true,\n        \"vlan\": 0,\n        \"ntpServer\": {\n            \"model_type\": \"AutoOrManualString\",\n            \"auto\": true,\n            \"value\": null\n        },\n        \"syslogRelay\": {\n            \"model_type\": \"SyslogRelay\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 514,\n            \"severity\": \"NOTICE\"\n        },\n        \"rtlsSettings\": {\n            \"model_type\": \"RtlsSettings\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 0\n        },\n        \"syntheticClientEnabled\": false,\n        \"ledControlEnabled\": true,\n        \"equipmentDiscovery\": false,\n        \"radioMap\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            }\n        },\n        \"greTunnelConfigurations\": [\n            {\n                \"model_type\": \"GreTunnelConfiguration\",\n                \"greTunnelName\": null,\n                \"greRemoteInetAddr\": null,\n                \"vlanIdsInGreTunnel\": []\n            }\n        ],\n        \"profileType\": \"equipment_ap\"\n    },\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"childProfileIds\": [\n        4,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								}
							]
						},
						{
							"name": "Create new Profile - Duplicate Profile Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8879 Status code is 500 - name rejected as duplicate\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"C8879 Error reason is duplicate \", function () {",
											"    var responseJson = pm.response.json();",
											"    pm.expect(responseJson.exType).to.eql('DsDuplicateEntityException');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": 6,\n    \"customerId\": 2,\n    \"profileType\": \"equipment_ap\",\n    \"name\": \"API Automation AP Profile\",\n    \"details\": {\n        \"model_type\": \"ApNetworkConfiguration\",\n        \"networkConfigVersion\": \"AP-1\",\n        \"equipmentType\": \"AP\",\n        \"vlanNative\": true,\n        \"vlan\": 0,\n        \"ntpServer\": {\n            \"model_type\": \"AutoOrManualString\",\n            \"auto\": true,\n            \"value\": null\n        },\n        \"syslogRelay\": {\n            \"model_type\": \"SyslogRelay\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 514,\n            \"severity\": \"NOTICE\"\n        },\n        \"rtlsSettings\": {\n            \"model_type\": \"RtlsSettings\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 0\n        },\n        \"syntheticClientEnabled\": false,\n        \"ledControlEnabled\": true,\n        \"equipmentDiscovery\": false,\n        \"radioMap\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            }\n        },\n        \"greTunnelConfigurations\": [\n            {\n                \"model_type\": \"GreTunnelConfiguration\",\n                \"greTunnelName\": null,\n                \"greRemoteInetAddr\": null,\n                \"vlanIdsInGreTunnel\": []\n            }\n        ],\n        \"profileType\": \"equipment_ap\"\n    },\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"childProfileIds\": [\n        4,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								},
								"description": "Attempt to create a profile with the same name as one previously created - this should return an HTTP 500 error stating that the name already exists"
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Create new Profile - Non-existent child profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8889 Status code is 500 - cannot be created\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"C8889 Error reason is invalid child profile\", function () {",
											"    var responseJson = pm.response.json();",
											"    pm.expect(responseJson.error).to.contain('DataIntegrityViolationException');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": 6,\n    \"customerId\": 2,\n    \"profileType\": \"equipment_ap\",\n    \"name\": \"Test \",\n    \"details\": {\n        \"model_type\": \"ApNetworkConfiguration\",\n        \"networkConfigVersion\": \"AP-1\",\n        \"equipmentType\": \"AP\",\n        \"vlanNative\": true,\n        \"vlan\": 0,\n        \"ntpServer\": {\n            \"model_type\": \"AutoOrManualString\",\n            \"auto\": true,\n            \"value\": null\n        },\n        \"syslogRelay\": {\n            \"model_type\": \"SyslogRelay\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 514,\n            \"severity\": \"NOTICE\"\n        },\n        \"rtlsSettings\": {\n            \"model_type\": \"RtlsSettings\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 0\n        },\n        \"syntheticClientEnabled\": false,\n        \"ledControlEnabled\": true,\n        \"equipmentDiscovery\": false,\n        \"radioMap\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            }\n        },\n        \"greTunnelConfigurations\": [\n            {\n                \"model_type\": \"GreTunnelConfiguration\",\n                \"greTunnelName\": null,\n                \"greRemoteInetAddr\": null,\n                \"vlanIdsInGreTunnel\": []\n            }\n        ],\n        \"profileType\": \"equipment_ap\"\n    },\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"childProfileIds\": [\n        {{ssidProfileId}}\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								},
								"description": "Attempt to create a profile with an non-existent child profile"
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Get Profile By Id - AP Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5898 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5898 Values match created AP Profile\", function () {",
											"    var newApProfile = pm.environment.get(\"newApProfile\")",
											"    var jsonData = pm.response.json();",
											"    var jsonString = JSON.stringify(jsonData)",
											"    pm.expect(jsonString).to.eql(newApProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId={{apProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{apProfileId}}",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								}
							]
						},
						{
							"name": "Get Profile and all its associated children",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8934 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8934 AP profile and children are returned\", function () {",
											"    var profileId = pm.environment.get(\"apProfileId\");",
											"    var children = pm.environment.get(\"childProfileIds\");",
											"    var array = children.split(',');",
											"    array.push(profileId);",
											"    configProfiles = JSON.stringify(array).replace(/[\\\\\"']+/g,\"\")",
											"    configProfiles = JSON.parse(configProfiles)",
											"",
											"    var jsonData = pm.response.json();",
											"    var retrievedProfiles = [];",
											"    for (var i in jsonData) {",
											"        if(jsonData[i].hasOwnProperty('id')) {",
											"        retrievedProfiles.push(jsonData[i].id);",
											"        }",
											"    }",
											"    ",
											"    pm.expect(retrievedProfiles).to.have.deep.members(configProfiles)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/withChildren?profileId={{apProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"withChildren"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{apProfileId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Get profile and its associated children - test to ensure all the children are returned along with the profile"
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/withChildren?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"withChildren"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/withChildren?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"withChildren"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n },\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n }\n]"
								}
							]
						},
						{
							"name": "Update Profile - AP Profile",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5899 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5899 Updated value(s) pushed to AP profile\", function () {",
											"    var updatedProfile = pm.request.body",
											"    var updatedProfileJson = JSON.parse(updatedProfile);",
											"    delete updatedProfileJson.lastModifiedTimestamp;",
											"    var updatedProfile = JSON.stringify(updatedProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    console.log('Updated profile '+jsonData.id)",
											"    delete jsonData.lastModifiedTimestamp;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"",
											"    pm.expect(jsonString).to.eql(updatedProfile);",
											"",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"modifiedTimeApProfile\", data.lastModifiedTimestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"Profile\",\n    \"id\": {{apProfileId}},\n    \"customerId\": 2,\n    \"profileType\": \"equipment_ap\",\n    \"name\": \"API Automation - AP Profile Updated\",\n    \"details\": {\n        \"model_type\": \"ApNetworkConfiguration\",\n        \"networkConfigVersion\": \"AP-1\",\n        \"equipmentType\": \"AP\",\n        \"vlanNative\": true,\n        \"vlan\": 0,\n        \"ntpServer\": {\n            \"model_type\": \"AutoOrManualString\",\n            \"auto\": true,\n            \"value\": null\n        },\n        \"syslogRelay\": {\n            \"model_type\": \"SyslogRelay\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 514,\n            \"severity\": \"NOTICE\"\n        },\n        \"rtlsSettings\": {\n            \"model_type\": \"RtlsSettings\",\n            \"enabled\": false,\n            \"srvHostIp\": null,\n            \"srvHostPort\": 0\n        },\n        \"syntheticClientEnabled\": false,\n        \"ledControlEnabled\": true,\n        \"equipmentDiscovery\": false,\n        \"radioMap\": {\n            \"is5GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is2dot4GHz\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzU\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            },\n            \"is5GHzL\": {\n                \"model_type\": \"RadioProfileConfiguration\",\n                \"bestApEnabled\": true,\n                \"bestAPSteerType\": \"both\"\n            }\n        },\n        \"greTunnelConfigurations\": [\n            {\n                \"model_type\": \"GreTunnelConfiguration\",\n                \"greTunnelName\": null,\n                \"greRemoteInetAddr\": null,\n                \"vlanIdsInGreTunnel\": []\n            }\n        ],\n        \"profileType\": \"equipment_ap\"\n    },\n    \"createdTimestamp\": {{createdTimeApProfile}},\n    \"lastModifiedTimestamp\": {{modifiedTimeApProfile}},\n    \"childProfileIds\": [\n        4,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"profileType\": \"equipment_ap\",\n    \"customerId\": 2,\n    \"name\": \"example AP profile\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								}
							]
						},
						{
							"name": "Delete Profile - AP profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C5900 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C5900 Proper AP profile deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    var profileId = parseInt(pm.environment.get(\"apProfileId\"));",
											"    console.log(\"deleted profile \"+jsonData.id)",
											"    pm.expect(jsonData.id).to.equal(profileId);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile?profileId={{apProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile"
									],
									"query": [
										{
											"key": "profileId",
											"value": "{{apProfileId}}",
											"description": "(Required) profile id"
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"amet voluptate\",\n \"path\": \"ullamco in nulla\",\n \"timestamp\": 13987051\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile?profileId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile"
											],
											"query": [
												{
													"key": "profileId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profileType\": \"equipment_ap\",\n \"customerId\": 2,\n \"name\": \"example AP profile\"\n}"
								}
							]
						},
						{
							"name": "Get Profiles By a set of ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8874 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8874 Returned profiles match requested profiles\", function () {",
											"var jsonData = pm.response.json();",
											"var profileIds = [];",
											"for (var i in jsonData) {",
											"    if(jsonData[i].hasOwnProperty('id')) {",
											"        profileIds.push(jsonData[i].id);",
											"    }",
											"}",
											"//console.log(profileIds);",
											"profiles = JSON.stringify(profileIds)",
											"",
											"profileSet = pm.environment.get(\"profileSet\")",
											"var array = profileSet.split(',');",
											"profileSet = JSON.stringify(array).replace(/[\\\\\"']+/g,\"\")",
											"profileSet = JSON.parse(profileSet)",
											"//console.log(profileSet)",
											"",
											"pm.expect(profileIds).to.have.deep.members(profileSet)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/inSet?profileIdSet={{profileSet}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"inSet"
									],
									"query": [
										{
											"key": "profileIdSet",
											"value": "{{profileSet}}",
											"description": "(Required) set of profile ids"
										}
									]
								},
								"description": "Request set of default profile IDs and make sure all of the requested set is returned"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/inSet?profileIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"inSet"
											],
											"query": [
												{
													"key": "profileIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n },\n {\n  \"profileType\": \"equipment_ap\",\n  \"customerId\": 2,\n  \"name\": \"example AP profile\"\n }\n]"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/inSet?profileIdSet=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"inSet"
											],
											"query": [
												{
													"key": "profileIdSet",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						},
						{
							"name": "Get Profiles By customerId - Profile Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8890 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8890 Returned profiles are only of requested type\", function () {",
											"var jsonData = pm.response.json();",
											"    _.each(jsonData.items, (item) => {",
											"        pm.expect(item.profileType).to.include(pm.environment.get('profileType'))",
											"    })",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/profile/forCustomer?customerId={{customerId}}&profileType={{profileType}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"profile",
										"forCustomer"
									],
									"query": [
										{
											"key": "customerId",
											"value": "{{customerId}}",
											"description": "(Required) customer id"
										},
										{
											"key": "nameSubstring",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "{\"model_type\":\"<string>\",\"columnName\":\"id\",\"sortOrder\":\"asc\"}",
											"description": "sort options",
											"disabled": true
										},
										{
											"key": "paginationContext",
											"value": "limit",
											"disabled": true
										},
										{
											"key": "profileType",
											"value": "{{profileType}}"
										}
									]
								},
								"description": "Only profiles of that type should be returned"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/forCustomer?customerId=<long>&profileType=&nameSubstring=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "profileType",
													"value": ""
												},
												{
													"key": "nameSubstring",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"items\": [\n  {\n   \"profileType\": \"equipment_ap\",\n   \"customerId\": 2,\n   \"name\": \"example AP profile\"\n  },\n  {\n   \"profileType\": \"equipment_ap\",\n   \"customerId\": 2,\n   \"name\": \"example AP profile\"\n  }\n ],\n \"context\": {\n  \"model_type\": \"PaginationContext\",\n  \"maxItemsPerPage\": 10\n }\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: bearer",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/profile/forCustomer?customerId=<long>&profileType=&nameSubstring=<string>&sortBy=[object Object]&sortBy=[object Object]&paginationContext=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"profile",
												"forCustomer"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<long>"
												},
												{
													"key": "profileType",
													"value": ""
												},
												{
													"key": "nameSubstring",
													"value": "<string>"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "sortBy",
													"value": "[object Object]"
												},
												{
													"key": "paginationContext",
													"value": ""
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						}
					]
				},
				{
					"name": "portal User",
					"item": [
						{
							"name": "Create new Portal User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C6532 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C6532 Created values match configured AP profile values\", function () {",
											"    var createProfile = pm.request.body;",
											"    var createProfileJson = JSON.parse(createProfile);",
											"    delete createProfileJson.id;",
											"    delete createProfileJson.lastModifiedTimestamp;",
											"    delete createProfileJson.createdTimestamp;",
											"    delete createProfileJson.password;",
											"    var createProfile = JSON.stringify(createProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    delete jsonData.id;",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.createdTimestamp;",
											"    delete jsonData.password;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"    pm.expect(jsonString).to.eql(createProfile);",
											"});",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"userProfileId\", data.id);",
											"postman.setEnvironmentVariable(\"username\", data.username);",
											"postman.setEnvironmentVariable(\"createdTimeUserProfile\", data.createdTimestamp);",
											"postman.setEnvironmentVariable(\"modifiedTimeUserProfile\", data.lastModifiedTimestamp);",
											"var newUserProfile = JSON.stringify(data);",
											"postman.setEnvironmentVariable(\"newUserProfile\", newUserProfile);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"PortalUser\",\n    \"id\": 1,\n    \"customerId\": 2,\n    \"username\": \"api_user@automation.com\",\n    \"password\": \"abcdefghijklmnopqrstuvwxyz0123456789\",\n    \"roles\": [\n        \"CustomerIT\"\n    ],\n    \"details\": null,\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"role\": \"CustomerIT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						},
						{
							"name": "Create new Portal User - Duplicate email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C6536 Status code is 500 - username rejected as duplicate\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"C6536 Error reason is duplicate username\", function () {",
											"    var responseJson = pm.response.json();",
											"    pm.expect(responseJson.exType).to.eql('DsDuplicateEntityException');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"PortalUser\",\n    \"id\": 1,\n    \"customerId\": 2,\n    \"username\": \"{{username}}\",\n    \"password\": \"abcdefghijklmnopqrstuvwxyz0123456789\",\n    \"roles\": [\n        \"CustomerIT\"\n    ],\n    \"details\": null,\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"role\": \"CustomerIT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									]
								},
								"description": "Create a new user with an invalid email - should fail"
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Create new Portal User - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8880 Status code is 500 - username rejected as invalid\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											"",
											"pm.test(\"C8880 Error reason is invalid username\", function () {",
											"    var responseJson = pm.response.json();",
											"    pm.expect(responseJson.exType).to.eql('DsDuplicateEntityException');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"PortalUser\",\n    \"id\": 1,\n    \"customerId\": 2,\n    \"username\": \"notanemail\",\n    \"password\": \"abcdefghijklmnopqrstuvwxyz0123456789\",\n    \"roles\": [\n        \"CustomerIT\"\n    ],\n    \"details\": null,\n    \"createdTimestamp\": 0,\n    \"lastModifiedTimestamp\": 0,\n    \"role\": \"CustomerIT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									]
								},
								"description": "Create a new user with an email with no domain - should fail"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								},
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								}
							]
						},
						{
							"name": "Get portal user By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C6533 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C6533 Values match created User Profile\", function () {",
											"    var newUserProfile = pm.environment.get(\"newUserProfile\")",
											"    var jsonData = pm.response.json();",
											"    var jsonString = JSON.stringify(jsonData)",
											"    pm.expect(jsonString).to.eql(newUserProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser?portalUserId={{userProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									],
									"query": [
										{
											"key": "portalUserId",
											"value": "{{userProfileId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Get portal user by user name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C8875 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C8875 User profile retrieved by username\", function () {",
											"    var jsonData = pm.response.json();",
											"    getUser = jsonData.username",
											"    pm.expect(getUser).to.eql(pm.environment.get('username'));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser/byUsernameOrNull?customerId=2&username={{username}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser",
										"byUsernameOrNull"
									],
									"query": [
										{
											"key": "customerId",
											"value": "2",
											"description": "(Required) "
										},
										{
											"key": "username",
											"value": "{{username}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/byUsernameOrNull?customerId=<integer>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"byUsernameOrNull"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser/byUsernameOrNull?customerId=<integer>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser",
												"byUsernameOrNull"
											],
											"query": [
												{
													"key": "customerId",
													"value": "<integer>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Update PortalUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C6534 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C6534 Updated value(s) pushed to User profile\", function () {",
											"    var updatedProfile = pm.request.body",
											"    var updatedProfileJson = JSON.parse(updatedProfile);",
											"    delete updatedProfileJson.lastModifiedTimestamp;",
											"    delete updatedProfileJson.password;",
											"    var updatedProfile = JSON.stringify(updatedProfileJson)",
											"    ",
											"    var jsonData = pm.response.json();",
											"    console.log('Updated profile '+jsonData.id)",
											"    delete jsonData.lastModifiedTimestamp;",
											"    delete jsonData.password;",
											"    var jsonString = JSON.stringify(jsonData);",
											"",
											"",
											"    pm.expect(jsonString).to.eql(updatedProfile);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model_type\": \"PortalUser\",\n    \"id\": {{userProfileId}},\n    \"customerId\": 2,\n    \"username\": \"api_user_updated@automation.com\",\n    \"password\": \"abcdefghijklmnopqrstuvwxyz0123456789\",\n    \"roles\": [\n        \"CustomerIT\"\n    ],\n    \"details\": null,\n    \"createdTimestamp\": {{createdTimeUserProfile}},\n    \"lastModifiedTimestamp\": {{modifiedTimeUserProfile}},\n    \"role\": \"CustomerIT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"customerId\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"createdTimestamp\": \"<long>\",\n    \"lastModifiedTimestamp\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						},
						{
							"name": "Delete PortalUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"C6535 Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"C6535 Proper User profile deleted\", function () {",
											"    var jsonData = pm.response.json();",
											"    var profileId = parseInt(pm.environment.get(\"userProfileId\"));",
											"    console.log(\"deleted profile \"+jsonData.id)",
											"    pm.expect(jsonData.id).to.equal(profileId);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/portal/portalUser?portalUserId={{userProfileId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"portal",
										"portalUser"
									],
									"query": [
										{
											"key": "portalUserId",
											"value": "{{userProfileId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "this object is returned in the cases when an API throws an exception",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"exType\": \"IllegalStateException\",\n \"error\": \"velit ex enim\",\n \"path\": \"in aliquip\",\n \"timestamp\": 62405592\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/portal/portalUser?portalUserId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"portal",
												"portalUser"
											],
											"query": [
												{
													"key": "portalUserId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"<long>\",\n \"customerId\": \"<integer>\",\n \"username\": \"<string>\",\n \"password\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"createdTimestamp\": \"<long>\",\n \"lastModifiedTimestamp\": \"<long>\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:9091"
		}
	]
}