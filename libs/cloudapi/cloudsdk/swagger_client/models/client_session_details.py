# coding: utf-8

"""
    CloudSDK Portal API

    APIs that provide services for provisioning, monitoring, and history retrieval of various data elements of CloudSDK.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ClientSessionDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'session_id': 'int',
        'auth_timestamp': 'int',
        'assoc_timestamp': 'int',
        'assoc_internal_sc': 'int',
        'ip_timestamp': 'int',
        'disconnect_by_ap_timestamp': 'int',
        'disconnect_by_client_timestamp': 'int',
        'timeout_timestamp': 'int',
        'first_data_sent_timestamp': 'int',
        'first_data_rcvd_timestamp': 'int',
        'ip_address': 'str',
        'radius_username': 'str',
        'ssid': 'str',
        'radio_type': 'RadioType',
        'last_event_timestamp': 'int',
        'hostname': 'str',
        'ap_fingerprint': 'str',
        'user_agent_str': 'str',
        'last_rx_timestamp': 'int',
        'last_tx_timestamp': 'int',
        'cp_username': 'str',
        'dhcp_details': 'ClientDhcpDetails',
        'eap_details': 'ClientEapDetails',
        'metric_details': 'ClientSessionMetricDetails',
        'is_reassociation': 'bool',
        'disconnect_by_ap_reason_code': 'int',
        'disconnect_by_client_reason_code': 'int',
        'disconnect_by_ap_internal_reason_code': 'int',
        'disconnect_by_client_internal_reason_code': 'int',
        'port_enabled_timestamp': 'int',
        'is11_r_used': 'bool',
        'is11_k_used': 'bool',
        'is11_v_used': 'bool',
        'security_type': 'SecurityType',
        'steer_type': 'SteerType',
        'previous_valid_session_id': 'int',
        'last_failure_details': 'ClientFailureDetails',
        'first_failure_details': 'ClientFailureDetails',
        'association_status': 'int',
        'dynamic_vlan': 'int',
        'assoc_rssi': 'int',
        'prior_session_id': 'int',
        'prior_equipment_id': 'int',
        'classification_name': 'str',
        'association_state': 'str'
    }

    attribute_map = {
        'session_id': 'sessionId',
        'auth_timestamp': 'authTimestamp',
        'assoc_timestamp': 'assocTimestamp',
        'assoc_internal_sc': 'assocInternalSC',
        'ip_timestamp': 'ipTimestamp',
        'disconnect_by_ap_timestamp': 'disconnectByApTimestamp',
        'disconnect_by_client_timestamp': 'disconnectByClientTimestamp',
        'timeout_timestamp': 'timeoutTimestamp',
        'first_data_sent_timestamp': 'firstDataSentTimestamp',
        'first_data_rcvd_timestamp': 'firstDataRcvdTimestamp',
        'ip_address': 'ipAddress',
        'radius_username': 'radiusUsername',
        'ssid': 'ssid',
        'radio_type': 'radioType',
        'last_event_timestamp': 'lastEventTimestamp',
        'hostname': 'hostname',
        'ap_fingerprint': 'apFingerprint',
        'user_agent_str': 'userAgentStr',
        'last_rx_timestamp': 'lastRxTimestamp',
        'last_tx_timestamp': 'lastTxTimestamp',
        'cp_username': 'cpUsername',
        'dhcp_details': 'dhcpDetails',
        'eap_details': 'eapDetails',
        'metric_details': 'metricDetails',
        'is_reassociation': 'isReassociation',
        'disconnect_by_ap_reason_code': 'disconnectByApReasonCode',
        'disconnect_by_client_reason_code': 'disconnectByClientReasonCode',
        'disconnect_by_ap_internal_reason_code': 'disconnectByApInternalReasonCode',
        'disconnect_by_client_internal_reason_code': 'disconnectByClientInternalReasonCode',
        'port_enabled_timestamp': 'portEnabledTimestamp',
        'is11_r_used': 'is11RUsed',
        'is11_k_used': 'is11KUsed',
        'is11_v_used': 'is11VUsed',
        'security_type': 'securityType',
        'steer_type': 'steerType',
        'previous_valid_session_id': 'previousValidSessionId',
        'last_failure_details': 'lastFailureDetails',
        'first_failure_details': 'firstFailureDetails',
        'association_status': 'associationStatus',
        'dynamic_vlan': 'dynamicVlan',
        'assoc_rssi': 'assocRssi',
        'prior_session_id': 'priorSessionId',
        'prior_equipment_id': 'priorEquipmentId',
        'classification_name': 'classificationName',
        'association_state': 'associationState'
    }

    def __init__(self, session_id=None, auth_timestamp=None, assoc_timestamp=None, assoc_internal_sc=None, ip_timestamp=None, disconnect_by_ap_timestamp=None, disconnect_by_client_timestamp=None, timeout_timestamp=None, first_data_sent_timestamp=None, first_data_rcvd_timestamp=None, ip_address=None, radius_username=None, ssid=None, radio_type=None, last_event_timestamp=None, hostname=None, ap_fingerprint=None, user_agent_str=None, last_rx_timestamp=None, last_tx_timestamp=None, cp_username=None, dhcp_details=None, eap_details=None, metric_details=None, is_reassociation=None, disconnect_by_ap_reason_code=None, disconnect_by_client_reason_code=None, disconnect_by_ap_internal_reason_code=None, disconnect_by_client_internal_reason_code=None, port_enabled_timestamp=None, is11_r_used=None, is11_k_used=None, is11_v_used=None, security_type=None, steer_type=None, previous_valid_session_id=None, last_failure_details=None, first_failure_details=None, association_status=None, dynamic_vlan=None, assoc_rssi=None, prior_session_id=None, prior_equipment_id=None, classification_name=None, association_state=None):  # noqa: E501
        """ClientSessionDetails - a model defined in Swagger"""  # noqa: E501
        self._session_id = None
        self._auth_timestamp = None
        self._assoc_timestamp = None
        self._assoc_internal_sc = None
        self._ip_timestamp = None
        self._disconnect_by_ap_timestamp = None
        self._disconnect_by_client_timestamp = None
        self._timeout_timestamp = None
        self._first_data_sent_timestamp = None
        self._first_data_rcvd_timestamp = None
        self._ip_address = None
        self._radius_username = None
        self._ssid = None
        self._radio_type = None
        self._last_event_timestamp = None
        self._hostname = None
        self._ap_fingerprint = None
        self._user_agent_str = None
        self._last_rx_timestamp = None
        self._last_tx_timestamp = None
        self._cp_username = None
        self._dhcp_details = None
        self._eap_details = None
        self._metric_details = None
        self._is_reassociation = None
        self._disconnect_by_ap_reason_code = None
        self._disconnect_by_client_reason_code = None
        self._disconnect_by_ap_internal_reason_code = None
        self._disconnect_by_client_internal_reason_code = None
        self._port_enabled_timestamp = None
        self._is11_r_used = None
        self._is11_k_used = None
        self._is11_v_used = None
        self._security_type = None
        self._steer_type = None
        self._previous_valid_session_id = None
        self._last_failure_details = None
        self._first_failure_details = None
        self._association_status = None
        self._dynamic_vlan = None
        self._assoc_rssi = None
        self._prior_session_id = None
        self._prior_equipment_id = None
        self._classification_name = None
        self._association_state = None
        self.discriminator = None
        if session_id is not None:
            self.session_id = session_id
        if auth_timestamp is not None:
            self.auth_timestamp = auth_timestamp
        if assoc_timestamp is not None:
            self.assoc_timestamp = assoc_timestamp
        if assoc_internal_sc is not None:
            self.assoc_internal_sc = assoc_internal_sc
        if ip_timestamp is not None:
            self.ip_timestamp = ip_timestamp
        if disconnect_by_ap_timestamp is not None:
            self.disconnect_by_ap_timestamp = disconnect_by_ap_timestamp
        if disconnect_by_client_timestamp is not None:
            self.disconnect_by_client_timestamp = disconnect_by_client_timestamp
        if timeout_timestamp is not None:
            self.timeout_timestamp = timeout_timestamp
        if first_data_sent_timestamp is not None:
            self.first_data_sent_timestamp = first_data_sent_timestamp
        if first_data_rcvd_timestamp is not None:
            self.first_data_rcvd_timestamp = first_data_rcvd_timestamp
        if ip_address is not None:
            self.ip_address = ip_address
        if radius_username is not None:
            self.radius_username = radius_username
        if ssid is not None:
            self.ssid = ssid
        if radio_type is not None:
            self.radio_type = radio_type
        if last_event_timestamp is not None:
            self.last_event_timestamp = last_event_timestamp
        if hostname is not None:
            self.hostname = hostname
        if ap_fingerprint is not None:
            self.ap_fingerprint = ap_fingerprint
        if user_agent_str is not None:
            self.user_agent_str = user_agent_str
        if last_rx_timestamp is not None:
            self.last_rx_timestamp = last_rx_timestamp
        if last_tx_timestamp is not None:
            self.last_tx_timestamp = last_tx_timestamp
        if cp_username is not None:
            self.cp_username = cp_username
        if dhcp_details is not None:
            self.dhcp_details = dhcp_details
        if eap_details is not None:
            self.eap_details = eap_details
        if metric_details is not None:
            self.metric_details = metric_details
        if is_reassociation is not None:
            self.is_reassociation = is_reassociation
        if disconnect_by_ap_reason_code is not None:
            self.disconnect_by_ap_reason_code = disconnect_by_ap_reason_code
        if disconnect_by_client_reason_code is not None:
            self.disconnect_by_client_reason_code = disconnect_by_client_reason_code
        if disconnect_by_ap_internal_reason_code is not None:
            self.disconnect_by_ap_internal_reason_code = disconnect_by_ap_internal_reason_code
        if disconnect_by_client_internal_reason_code is not None:
            self.disconnect_by_client_internal_reason_code = disconnect_by_client_internal_reason_code
        if port_enabled_timestamp is not None:
            self.port_enabled_timestamp = port_enabled_timestamp
        if is11_r_used is not None:
            self.is11_r_used = is11_r_used
        if is11_k_used is not None:
            self.is11_k_used = is11_k_used
        if is11_v_used is not None:
            self.is11_v_used = is11_v_used
        if security_type is not None:
            self.security_type = security_type
        if steer_type is not None:
            self.steer_type = steer_type
        if previous_valid_session_id is not None:
            self.previous_valid_session_id = previous_valid_session_id
        if last_failure_details is not None:
            self.last_failure_details = last_failure_details
        if first_failure_details is not None:
            self.first_failure_details = first_failure_details
        if association_status is not None:
            self.association_status = association_status
        if dynamic_vlan is not None:
            self.dynamic_vlan = dynamic_vlan
        if assoc_rssi is not None:
            self.assoc_rssi = assoc_rssi
        if prior_session_id is not None:
            self.prior_session_id = prior_session_id
        if prior_equipment_id is not None:
            self.prior_equipment_id = prior_equipment_id
        if classification_name is not None:
            self.classification_name = classification_name
        if association_state is not None:
            self.association_state = association_state

    @property
    def session_id(self):
        """Gets the session_id of this ClientSessionDetails.  # noqa: E501


        :return: The session_id of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this ClientSessionDetails.


        :param session_id: The session_id of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._session_id = session_id

    @property
    def auth_timestamp(self):
        """Gets the auth_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The auth_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._auth_timestamp

    @auth_timestamp.setter
    def auth_timestamp(self, auth_timestamp):
        """Sets the auth_timestamp of this ClientSessionDetails.


        :param auth_timestamp: The auth_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._auth_timestamp = auth_timestamp

    @property
    def assoc_timestamp(self):
        """Gets the assoc_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The assoc_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._assoc_timestamp

    @assoc_timestamp.setter
    def assoc_timestamp(self, assoc_timestamp):
        """Sets the assoc_timestamp of this ClientSessionDetails.


        :param assoc_timestamp: The assoc_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._assoc_timestamp = assoc_timestamp

    @property
    def assoc_internal_sc(self):
        """Gets the assoc_internal_sc of this ClientSessionDetails.  # noqa: E501


        :return: The assoc_internal_sc of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._assoc_internal_sc

    @assoc_internal_sc.setter
    def assoc_internal_sc(self, assoc_internal_sc):
        """Sets the assoc_internal_sc of this ClientSessionDetails.


        :param assoc_internal_sc: The assoc_internal_sc of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._assoc_internal_sc = assoc_internal_sc

    @property
    def ip_timestamp(self):
        """Gets the ip_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The ip_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._ip_timestamp

    @ip_timestamp.setter
    def ip_timestamp(self, ip_timestamp):
        """Sets the ip_timestamp of this ClientSessionDetails.


        :param ip_timestamp: The ip_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._ip_timestamp = ip_timestamp

    @property
    def disconnect_by_ap_timestamp(self):
        """Gets the disconnect_by_ap_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The disconnect_by_ap_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._disconnect_by_ap_timestamp

    @disconnect_by_ap_timestamp.setter
    def disconnect_by_ap_timestamp(self, disconnect_by_ap_timestamp):
        """Sets the disconnect_by_ap_timestamp of this ClientSessionDetails.


        :param disconnect_by_ap_timestamp: The disconnect_by_ap_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._disconnect_by_ap_timestamp = disconnect_by_ap_timestamp

    @property
    def disconnect_by_client_timestamp(self):
        """Gets the disconnect_by_client_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The disconnect_by_client_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._disconnect_by_client_timestamp

    @disconnect_by_client_timestamp.setter
    def disconnect_by_client_timestamp(self, disconnect_by_client_timestamp):
        """Sets the disconnect_by_client_timestamp of this ClientSessionDetails.


        :param disconnect_by_client_timestamp: The disconnect_by_client_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._disconnect_by_client_timestamp = disconnect_by_client_timestamp

    @property
    def timeout_timestamp(self):
        """Gets the timeout_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The timeout_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._timeout_timestamp

    @timeout_timestamp.setter
    def timeout_timestamp(self, timeout_timestamp):
        """Sets the timeout_timestamp of this ClientSessionDetails.


        :param timeout_timestamp: The timeout_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._timeout_timestamp = timeout_timestamp

    @property
    def first_data_sent_timestamp(self):
        """Gets the first_data_sent_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The first_data_sent_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._first_data_sent_timestamp

    @first_data_sent_timestamp.setter
    def first_data_sent_timestamp(self, first_data_sent_timestamp):
        """Sets the first_data_sent_timestamp of this ClientSessionDetails.


        :param first_data_sent_timestamp: The first_data_sent_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._first_data_sent_timestamp = first_data_sent_timestamp

    @property
    def first_data_rcvd_timestamp(self):
        """Gets the first_data_rcvd_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The first_data_rcvd_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._first_data_rcvd_timestamp

    @first_data_rcvd_timestamp.setter
    def first_data_rcvd_timestamp(self, first_data_rcvd_timestamp):
        """Sets the first_data_rcvd_timestamp of this ClientSessionDetails.


        :param first_data_rcvd_timestamp: The first_data_rcvd_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._first_data_rcvd_timestamp = first_data_rcvd_timestamp

    @property
    def ip_address(self):
        """Gets the ip_address of this ClientSessionDetails.  # noqa: E501


        :return: The ip_address of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this ClientSessionDetails.


        :param ip_address: The ip_address of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._ip_address = ip_address

    @property
    def radius_username(self):
        """Gets the radius_username of this ClientSessionDetails.  # noqa: E501


        :return: The radius_username of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._radius_username

    @radius_username.setter
    def radius_username(self, radius_username):
        """Sets the radius_username of this ClientSessionDetails.


        :param radius_username: The radius_username of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._radius_username = radius_username

    @property
    def ssid(self):
        """Gets the ssid of this ClientSessionDetails.  # noqa: E501


        :return: The ssid of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._ssid

    @ssid.setter
    def ssid(self, ssid):
        """Sets the ssid of this ClientSessionDetails.


        :param ssid: The ssid of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._ssid = ssid

    @property
    def radio_type(self):
        """Gets the radio_type of this ClientSessionDetails.  # noqa: E501


        :return: The radio_type of this ClientSessionDetails.  # noqa: E501
        :rtype: RadioType
        """
        return self._radio_type

    @radio_type.setter
    def radio_type(self, radio_type):
        """Sets the radio_type of this ClientSessionDetails.


        :param radio_type: The radio_type of this ClientSessionDetails.  # noqa: E501
        :type: RadioType
        """

        self._radio_type = radio_type

    @property
    def last_event_timestamp(self):
        """Gets the last_event_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The last_event_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._last_event_timestamp

    @last_event_timestamp.setter
    def last_event_timestamp(self, last_event_timestamp):
        """Sets the last_event_timestamp of this ClientSessionDetails.


        :param last_event_timestamp: The last_event_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._last_event_timestamp = last_event_timestamp

    @property
    def hostname(self):
        """Gets the hostname of this ClientSessionDetails.  # noqa: E501


        :return: The hostname of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this ClientSessionDetails.


        :param hostname: The hostname of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._hostname = hostname

    @property
    def ap_fingerprint(self):
        """Gets the ap_fingerprint of this ClientSessionDetails.  # noqa: E501


        :return: The ap_fingerprint of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._ap_fingerprint

    @ap_fingerprint.setter
    def ap_fingerprint(self, ap_fingerprint):
        """Sets the ap_fingerprint of this ClientSessionDetails.


        :param ap_fingerprint: The ap_fingerprint of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._ap_fingerprint = ap_fingerprint

    @property
    def user_agent_str(self):
        """Gets the user_agent_str of this ClientSessionDetails.  # noqa: E501


        :return: The user_agent_str of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._user_agent_str

    @user_agent_str.setter
    def user_agent_str(self, user_agent_str):
        """Sets the user_agent_str of this ClientSessionDetails.


        :param user_agent_str: The user_agent_str of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._user_agent_str = user_agent_str

    @property
    def last_rx_timestamp(self):
        """Gets the last_rx_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The last_rx_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._last_rx_timestamp

    @last_rx_timestamp.setter
    def last_rx_timestamp(self, last_rx_timestamp):
        """Sets the last_rx_timestamp of this ClientSessionDetails.


        :param last_rx_timestamp: The last_rx_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._last_rx_timestamp = last_rx_timestamp

    @property
    def last_tx_timestamp(self):
        """Gets the last_tx_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The last_tx_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._last_tx_timestamp

    @last_tx_timestamp.setter
    def last_tx_timestamp(self, last_tx_timestamp):
        """Sets the last_tx_timestamp of this ClientSessionDetails.


        :param last_tx_timestamp: The last_tx_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._last_tx_timestamp = last_tx_timestamp

    @property
    def cp_username(self):
        """Gets the cp_username of this ClientSessionDetails.  # noqa: E501


        :return: The cp_username of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._cp_username

    @cp_username.setter
    def cp_username(self, cp_username):
        """Sets the cp_username of this ClientSessionDetails.


        :param cp_username: The cp_username of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._cp_username = cp_username

    @property
    def dhcp_details(self):
        """Gets the dhcp_details of this ClientSessionDetails.  # noqa: E501


        :return: The dhcp_details of this ClientSessionDetails.  # noqa: E501
        :rtype: ClientDhcpDetails
        """
        return self._dhcp_details

    @dhcp_details.setter
    def dhcp_details(self, dhcp_details):
        """Sets the dhcp_details of this ClientSessionDetails.


        :param dhcp_details: The dhcp_details of this ClientSessionDetails.  # noqa: E501
        :type: ClientDhcpDetails
        """

        self._dhcp_details = dhcp_details

    @property
    def eap_details(self):
        """Gets the eap_details of this ClientSessionDetails.  # noqa: E501


        :return: The eap_details of this ClientSessionDetails.  # noqa: E501
        :rtype: ClientEapDetails
        """
        return self._eap_details

    @eap_details.setter
    def eap_details(self, eap_details):
        """Sets the eap_details of this ClientSessionDetails.


        :param eap_details: The eap_details of this ClientSessionDetails.  # noqa: E501
        :type: ClientEapDetails
        """

        self._eap_details = eap_details

    @property
    def metric_details(self):
        """Gets the metric_details of this ClientSessionDetails.  # noqa: E501


        :return: The metric_details of this ClientSessionDetails.  # noqa: E501
        :rtype: ClientSessionMetricDetails
        """
        return self._metric_details

    @metric_details.setter
    def metric_details(self, metric_details):
        """Sets the metric_details of this ClientSessionDetails.


        :param metric_details: The metric_details of this ClientSessionDetails.  # noqa: E501
        :type: ClientSessionMetricDetails
        """

        self._metric_details = metric_details

    @property
    def is_reassociation(self):
        """Gets the is_reassociation of this ClientSessionDetails.  # noqa: E501


        :return: The is_reassociation of this ClientSessionDetails.  # noqa: E501
        :rtype: bool
        """
        return self._is_reassociation

    @is_reassociation.setter
    def is_reassociation(self, is_reassociation):
        """Sets the is_reassociation of this ClientSessionDetails.


        :param is_reassociation: The is_reassociation of this ClientSessionDetails.  # noqa: E501
        :type: bool
        """

        self._is_reassociation = is_reassociation

    @property
    def disconnect_by_ap_reason_code(self):
        """Gets the disconnect_by_ap_reason_code of this ClientSessionDetails.  # noqa: E501


        :return: The disconnect_by_ap_reason_code of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._disconnect_by_ap_reason_code

    @disconnect_by_ap_reason_code.setter
    def disconnect_by_ap_reason_code(self, disconnect_by_ap_reason_code):
        """Sets the disconnect_by_ap_reason_code of this ClientSessionDetails.


        :param disconnect_by_ap_reason_code: The disconnect_by_ap_reason_code of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._disconnect_by_ap_reason_code = disconnect_by_ap_reason_code

    @property
    def disconnect_by_client_reason_code(self):
        """Gets the disconnect_by_client_reason_code of this ClientSessionDetails.  # noqa: E501


        :return: The disconnect_by_client_reason_code of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._disconnect_by_client_reason_code

    @disconnect_by_client_reason_code.setter
    def disconnect_by_client_reason_code(self, disconnect_by_client_reason_code):
        """Sets the disconnect_by_client_reason_code of this ClientSessionDetails.


        :param disconnect_by_client_reason_code: The disconnect_by_client_reason_code of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._disconnect_by_client_reason_code = disconnect_by_client_reason_code

    @property
    def disconnect_by_ap_internal_reason_code(self):
        """Gets the disconnect_by_ap_internal_reason_code of this ClientSessionDetails.  # noqa: E501


        :return: The disconnect_by_ap_internal_reason_code of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._disconnect_by_ap_internal_reason_code

    @disconnect_by_ap_internal_reason_code.setter
    def disconnect_by_ap_internal_reason_code(self, disconnect_by_ap_internal_reason_code):
        """Sets the disconnect_by_ap_internal_reason_code of this ClientSessionDetails.


        :param disconnect_by_ap_internal_reason_code: The disconnect_by_ap_internal_reason_code of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._disconnect_by_ap_internal_reason_code = disconnect_by_ap_internal_reason_code

    @property
    def disconnect_by_client_internal_reason_code(self):
        """Gets the disconnect_by_client_internal_reason_code of this ClientSessionDetails.  # noqa: E501


        :return: The disconnect_by_client_internal_reason_code of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._disconnect_by_client_internal_reason_code

    @disconnect_by_client_internal_reason_code.setter
    def disconnect_by_client_internal_reason_code(self, disconnect_by_client_internal_reason_code):
        """Sets the disconnect_by_client_internal_reason_code of this ClientSessionDetails.


        :param disconnect_by_client_internal_reason_code: The disconnect_by_client_internal_reason_code of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._disconnect_by_client_internal_reason_code = disconnect_by_client_internal_reason_code

    @property
    def port_enabled_timestamp(self):
        """Gets the port_enabled_timestamp of this ClientSessionDetails.  # noqa: E501


        :return: The port_enabled_timestamp of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._port_enabled_timestamp

    @port_enabled_timestamp.setter
    def port_enabled_timestamp(self, port_enabled_timestamp):
        """Sets the port_enabled_timestamp of this ClientSessionDetails.


        :param port_enabled_timestamp: The port_enabled_timestamp of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._port_enabled_timestamp = port_enabled_timestamp

    @property
    def is11_r_used(self):
        """Gets the is11_r_used of this ClientSessionDetails.  # noqa: E501


        :return: The is11_r_used of this ClientSessionDetails.  # noqa: E501
        :rtype: bool
        """
        return self._is11_r_used

    @is11_r_used.setter
    def is11_r_used(self, is11_r_used):
        """Sets the is11_r_used of this ClientSessionDetails.


        :param is11_r_used: The is11_r_used of this ClientSessionDetails.  # noqa: E501
        :type: bool
        """

        self._is11_r_used = is11_r_used

    @property
    def is11_k_used(self):
        """Gets the is11_k_used of this ClientSessionDetails.  # noqa: E501


        :return: The is11_k_used of this ClientSessionDetails.  # noqa: E501
        :rtype: bool
        """
        return self._is11_k_used

    @is11_k_used.setter
    def is11_k_used(self, is11_k_used):
        """Sets the is11_k_used of this ClientSessionDetails.


        :param is11_k_used: The is11_k_used of this ClientSessionDetails.  # noqa: E501
        :type: bool
        """

        self._is11_k_used = is11_k_used

    @property
    def is11_v_used(self):
        """Gets the is11_v_used of this ClientSessionDetails.  # noqa: E501


        :return: The is11_v_used of this ClientSessionDetails.  # noqa: E501
        :rtype: bool
        """
        return self._is11_v_used

    @is11_v_used.setter
    def is11_v_used(self, is11_v_used):
        """Sets the is11_v_used of this ClientSessionDetails.


        :param is11_v_used: The is11_v_used of this ClientSessionDetails.  # noqa: E501
        :type: bool
        """

        self._is11_v_used = is11_v_used

    @property
    def security_type(self):
        """Gets the security_type of this ClientSessionDetails.  # noqa: E501


        :return: The security_type of this ClientSessionDetails.  # noqa: E501
        :rtype: SecurityType
        """
        return self._security_type

    @security_type.setter
    def security_type(self, security_type):
        """Sets the security_type of this ClientSessionDetails.


        :param security_type: The security_type of this ClientSessionDetails.  # noqa: E501
        :type: SecurityType
        """

        self._security_type = security_type

    @property
    def steer_type(self):
        """Gets the steer_type of this ClientSessionDetails.  # noqa: E501


        :return: The steer_type of this ClientSessionDetails.  # noqa: E501
        :rtype: SteerType
        """
        return self._steer_type

    @steer_type.setter
    def steer_type(self, steer_type):
        """Sets the steer_type of this ClientSessionDetails.


        :param steer_type: The steer_type of this ClientSessionDetails.  # noqa: E501
        :type: SteerType
        """

        self._steer_type = steer_type

    @property
    def previous_valid_session_id(self):
        """Gets the previous_valid_session_id of this ClientSessionDetails.  # noqa: E501


        :return: The previous_valid_session_id of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._previous_valid_session_id

    @previous_valid_session_id.setter
    def previous_valid_session_id(self, previous_valid_session_id):
        """Sets the previous_valid_session_id of this ClientSessionDetails.


        :param previous_valid_session_id: The previous_valid_session_id of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._previous_valid_session_id = previous_valid_session_id

    @property
    def last_failure_details(self):
        """Gets the last_failure_details of this ClientSessionDetails.  # noqa: E501


        :return: The last_failure_details of this ClientSessionDetails.  # noqa: E501
        :rtype: ClientFailureDetails
        """
        return self._last_failure_details

    @last_failure_details.setter
    def last_failure_details(self, last_failure_details):
        """Sets the last_failure_details of this ClientSessionDetails.


        :param last_failure_details: The last_failure_details of this ClientSessionDetails.  # noqa: E501
        :type: ClientFailureDetails
        """

        self._last_failure_details = last_failure_details

    @property
    def first_failure_details(self):
        """Gets the first_failure_details of this ClientSessionDetails.  # noqa: E501


        :return: The first_failure_details of this ClientSessionDetails.  # noqa: E501
        :rtype: ClientFailureDetails
        """
        return self._first_failure_details

    @first_failure_details.setter
    def first_failure_details(self, first_failure_details):
        """Sets the first_failure_details of this ClientSessionDetails.


        :param first_failure_details: The first_failure_details of this ClientSessionDetails.  # noqa: E501
        :type: ClientFailureDetails
        """

        self._first_failure_details = first_failure_details

    @property
    def association_status(self):
        """Gets the association_status of this ClientSessionDetails.  # noqa: E501


        :return: The association_status of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._association_status

    @association_status.setter
    def association_status(self, association_status):
        """Sets the association_status of this ClientSessionDetails.


        :param association_status: The association_status of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._association_status = association_status

    @property
    def dynamic_vlan(self):
        """Gets the dynamic_vlan of this ClientSessionDetails.  # noqa: E501


        :return: The dynamic_vlan of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._dynamic_vlan

    @dynamic_vlan.setter
    def dynamic_vlan(self, dynamic_vlan):
        """Sets the dynamic_vlan of this ClientSessionDetails.


        :param dynamic_vlan: The dynamic_vlan of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._dynamic_vlan = dynamic_vlan

    @property
    def assoc_rssi(self):
        """Gets the assoc_rssi of this ClientSessionDetails.  # noqa: E501


        :return: The assoc_rssi of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._assoc_rssi

    @assoc_rssi.setter
    def assoc_rssi(self, assoc_rssi):
        """Sets the assoc_rssi of this ClientSessionDetails.


        :param assoc_rssi: The assoc_rssi of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._assoc_rssi = assoc_rssi

    @property
    def prior_session_id(self):
        """Gets the prior_session_id of this ClientSessionDetails.  # noqa: E501


        :return: The prior_session_id of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._prior_session_id

    @prior_session_id.setter
    def prior_session_id(self, prior_session_id):
        """Sets the prior_session_id of this ClientSessionDetails.


        :param prior_session_id: The prior_session_id of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._prior_session_id = prior_session_id

    @property
    def prior_equipment_id(self):
        """Gets the prior_equipment_id of this ClientSessionDetails.  # noqa: E501


        :return: The prior_equipment_id of this ClientSessionDetails.  # noqa: E501
        :rtype: int
        """
        return self._prior_equipment_id

    @prior_equipment_id.setter
    def prior_equipment_id(self, prior_equipment_id):
        """Sets the prior_equipment_id of this ClientSessionDetails.


        :param prior_equipment_id: The prior_equipment_id of this ClientSessionDetails.  # noqa: E501
        :type: int
        """

        self._prior_equipment_id = prior_equipment_id

    @property
    def classification_name(self):
        """Gets the classification_name of this ClientSessionDetails.  # noqa: E501


        :return: The classification_name of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._classification_name

    @classification_name.setter
    def classification_name(self, classification_name):
        """Sets the classification_name of this ClientSessionDetails.


        :param classification_name: The classification_name of this ClientSessionDetails.  # noqa: E501
        :type: str
        """

        self._classification_name = classification_name

    @property
    def association_state(self):
        """Gets the association_state of this ClientSessionDetails.  # noqa: E501


        :return: The association_state of this ClientSessionDetails.  # noqa: E501
        :rtype: str
        """
        return self._association_state

    @association_state.setter
    def association_state(self, association_state):
        """Sets the association_state of this ClientSessionDetails.


        :param association_state: The association_state of this ClientSessionDetails.  # noqa: E501
        :type: str
        """
        allowed_values = ["_802_11_Authenticated", "_802_11_Associated,", "_802_1x_Authenticated", "Valid_Ip", "Active_Data", "AP_Timeout", "Cloud_Timeout", "Disconnected"]  # noqa: E501
        if association_state not in allowed_values:
            raise ValueError(
                "Invalid value for `association_state` ({0}), must be one of {1}"  # noqa: E501
                .format(association_state, allowed_values)
            )

        self._association_state = association_state

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClientSessionDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClientSessionDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
