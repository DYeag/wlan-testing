# coding: utf-8

"""
    CloudSDK Portal API

    APIs that provide services for provisioning, monitoring, and history retrieval of various data elements of CloudSDK.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ClientSessionMetricDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'rx_bytes': 'int',
        'tx_bytes': 'int',
        'total_rx_packets': 'int',
        'total_tx_packets': 'int',
        'rx_mbps': 'float',
        'tx_mbps': 'float',
        'rssi': 'int',
        'snr': 'int',
        'rx_rate_kbps': 'int',
        'tx_rate_kbps': 'int',
        'last_metric_timestamp': 'int',
        'last_rx_timestamp': 'int',
        'last_tx_timestamp': 'int',
        'classification': 'str',
        'tx_data_frames': 'int',
        'tx_data_frames_retried': 'int',
        'rx_data_frames': 'int'
    }

    attribute_map = {
        'rx_bytes': 'rxBytes',
        'tx_bytes': 'txBytes',
        'total_rx_packets': 'totalRxPackets',
        'total_tx_packets': 'totalTxPackets',
        'rx_mbps': 'rxMbps',
        'tx_mbps': 'txMbps',
        'rssi': 'rssi',
        'snr': 'snr',
        'rx_rate_kbps': 'rxRateKbps',
        'tx_rate_kbps': 'txRateKbps',
        'last_metric_timestamp': 'lastMetricTimestamp',
        'last_rx_timestamp': 'lastRxTimestamp',
        'last_tx_timestamp': 'lastTxTimestamp',
        'classification': 'classification',
        'tx_data_frames': 'txDataFrames',
        'tx_data_frames_retried': 'txDataFramesRetried',
        'rx_data_frames': 'rxDataFrames'
    }

    def __init__(self, rx_bytes=None, tx_bytes=None, total_rx_packets=None, total_tx_packets=None, rx_mbps=None, tx_mbps=None, rssi=None, snr=None, rx_rate_kbps=None, tx_rate_kbps=None, last_metric_timestamp=None, last_rx_timestamp=None, last_tx_timestamp=None, classification=None, tx_data_frames=None, tx_data_frames_retried=None, rx_data_frames=None):  # noqa: E501
        """ClientSessionMetricDetails - a model defined in Swagger"""  # noqa: E501
        self._rx_bytes = None
        self._tx_bytes = None
        self._total_rx_packets = None
        self._total_tx_packets = None
        self._rx_mbps = None
        self._tx_mbps = None
        self._rssi = None
        self._snr = None
        self._rx_rate_kbps = None
        self._tx_rate_kbps = None
        self._last_metric_timestamp = None
        self._last_rx_timestamp = None
        self._last_tx_timestamp = None
        self._classification = None
        self._tx_data_frames = None
        self._tx_data_frames_retried = None
        self._rx_data_frames = None
        self.discriminator = None
        if rx_bytes is not None:
            self.rx_bytes = rx_bytes
        if tx_bytes is not None:
            self.tx_bytes = tx_bytes
        if total_rx_packets is not None:
            self.total_rx_packets = total_rx_packets
        if total_tx_packets is not None:
            self.total_tx_packets = total_tx_packets
        if rx_mbps is not None:
            self.rx_mbps = rx_mbps
        if tx_mbps is not None:
            self.tx_mbps = tx_mbps
        if rssi is not None:
            self.rssi = rssi
        if snr is not None:
            self.snr = snr
        if rx_rate_kbps is not None:
            self.rx_rate_kbps = rx_rate_kbps
        if tx_rate_kbps is not None:
            self.tx_rate_kbps = tx_rate_kbps
        if last_metric_timestamp is not None:
            self.last_metric_timestamp = last_metric_timestamp
        if last_rx_timestamp is not None:
            self.last_rx_timestamp = last_rx_timestamp
        if last_tx_timestamp is not None:
            self.last_tx_timestamp = last_tx_timestamp
        if classification is not None:
            self.classification = classification
        if tx_data_frames is not None:
            self.tx_data_frames = tx_data_frames
        if tx_data_frames_retried is not None:
            self.tx_data_frames_retried = tx_data_frames_retried
        if rx_data_frames is not None:
            self.rx_data_frames = rx_data_frames

    @property
    def rx_bytes(self):
        """Gets the rx_bytes of this ClientSessionMetricDetails.  # noqa: E501


        :return: The rx_bytes of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._rx_bytes

    @rx_bytes.setter
    def rx_bytes(self, rx_bytes):
        """Sets the rx_bytes of this ClientSessionMetricDetails.


        :param rx_bytes: The rx_bytes of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._rx_bytes = rx_bytes

    @property
    def tx_bytes(self):
        """Gets the tx_bytes of this ClientSessionMetricDetails.  # noqa: E501


        :return: The tx_bytes of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._tx_bytes

    @tx_bytes.setter
    def tx_bytes(self, tx_bytes):
        """Sets the tx_bytes of this ClientSessionMetricDetails.


        :param tx_bytes: The tx_bytes of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._tx_bytes = tx_bytes

    @property
    def total_rx_packets(self):
        """Gets the total_rx_packets of this ClientSessionMetricDetails.  # noqa: E501


        :return: The total_rx_packets of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._total_rx_packets

    @total_rx_packets.setter
    def total_rx_packets(self, total_rx_packets):
        """Sets the total_rx_packets of this ClientSessionMetricDetails.


        :param total_rx_packets: The total_rx_packets of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._total_rx_packets = total_rx_packets

    @property
    def total_tx_packets(self):
        """Gets the total_tx_packets of this ClientSessionMetricDetails.  # noqa: E501


        :return: The total_tx_packets of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._total_tx_packets

    @total_tx_packets.setter
    def total_tx_packets(self, total_tx_packets):
        """Sets the total_tx_packets of this ClientSessionMetricDetails.


        :param total_tx_packets: The total_tx_packets of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._total_tx_packets = total_tx_packets

    @property
    def rx_mbps(self):
        """Gets the rx_mbps of this ClientSessionMetricDetails.  # noqa: E501


        :return: The rx_mbps of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: float
        """
        return self._rx_mbps

    @rx_mbps.setter
    def rx_mbps(self, rx_mbps):
        """Sets the rx_mbps of this ClientSessionMetricDetails.


        :param rx_mbps: The rx_mbps of this ClientSessionMetricDetails.  # noqa: E501
        :type: float
        """

        self._rx_mbps = rx_mbps

    @property
    def tx_mbps(self):
        """Gets the tx_mbps of this ClientSessionMetricDetails.  # noqa: E501


        :return: The tx_mbps of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: float
        """
        return self._tx_mbps

    @tx_mbps.setter
    def tx_mbps(self, tx_mbps):
        """Sets the tx_mbps of this ClientSessionMetricDetails.


        :param tx_mbps: The tx_mbps of this ClientSessionMetricDetails.  # noqa: E501
        :type: float
        """

        self._tx_mbps = tx_mbps

    @property
    def rssi(self):
        """Gets the rssi of this ClientSessionMetricDetails.  # noqa: E501


        :return: The rssi of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._rssi

    @rssi.setter
    def rssi(self, rssi):
        """Sets the rssi of this ClientSessionMetricDetails.


        :param rssi: The rssi of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._rssi = rssi

    @property
    def snr(self):
        """Gets the snr of this ClientSessionMetricDetails.  # noqa: E501


        :return: The snr of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._snr

    @snr.setter
    def snr(self, snr):
        """Sets the snr of this ClientSessionMetricDetails.


        :param snr: The snr of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._snr = snr

    @property
    def rx_rate_kbps(self):
        """Gets the rx_rate_kbps of this ClientSessionMetricDetails.  # noqa: E501


        :return: The rx_rate_kbps of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._rx_rate_kbps

    @rx_rate_kbps.setter
    def rx_rate_kbps(self, rx_rate_kbps):
        """Sets the rx_rate_kbps of this ClientSessionMetricDetails.


        :param rx_rate_kbps: The rx_rate_kbps of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._rx_rate_kbps = rx_rate_kbps

    @property
    def tx_rate_kbps(self):
        """Gets the tx_rate_kbps of this ClientSessionMetricDetails.  # noqa: E501


        :return: The tx_rate_kbps of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._tx_rate_kbps

    @tx_rate_kbps.setter
    def tx_rate_kbps(self, tx_rate_kbps):
        """Sets the tx_rate_kbps of this ClientSessionMetricDetails.


        :param tx_rate_kbps: The tx_rate_kbps of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._tx_rate_kbps = tx_rate_kbps

    @property
    def last_metric_timestamp(self):
        """Gets the last_metric_timestamp of this ClientSessionMetricDetails.  # noqa: E501


        :return: The last_metric_timestamp of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._last_metric_timestamp

    @last_metric_timestamp.setter
    def last_metric_timestamp(self, last_metric_timestamp):
        """Sets the last_metric_timestamp of this ClientSessionMetricDetails.


        :param last_metric_timestamp: The last_metric_timestamp of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._last_metric_timestamp = last_metric_timestamp

    @property
    def last_rx_timestamp(self):
        """Gets the last_rx_timestamp of this ClientSessionMetricDetails.  # noqa: E501


        :return: The last_rx_timestamp of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._last_rx_timestamp

    @last_rx_timestamp.setter
    def last_rx_timestamp(self, last_rx_timestamp):
        """Sets the last_rx_timestamp of this ClientSessionMetricDetails.


        :param last_rx_timestamp: The last_rx_timestamp of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._last_rx_timestamp = last_rx_timestamp

    @property
    def last_tx_timestamp(self):
        """Gets the last_tx_timestamp of this ClientSessionMetricDetails.  # noqa: E501


        :return: The last_tx_timestamp of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._last_tx_timestamp

    @last_tx_timestamp.setter
    def last_tx_timestamp(self, last_tx_timestamp):
        """Sets the last_tx_timestamp of this ClientSessionMetricDetails.


        :param last_tx_timestamp: The last_tx_timestamp of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._last_tx_timestamp = last_tx_timestamp

    @property
    def classification(self):
        """Gets the classification of this ClientSessionMetricDetails.  # noqa: E501


        :return: The classification of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: str
        """
        return self._classification

    @classification.setter
    def classification(self, classification):
        """Sets the classification of this ClientSessionMetricDetails.


        :param classification: The classification of this ClientSessionMetricDetails.  # noqa: E501
        :type: str
        """

        self._classification = classification

    @property
    def tx_data_frames(self):
        """Gets the tx_data_frames of this ClientSessionMetricDetails.  # noqa: E501

        The number of dataframes transmitted TO the client from the AP.  # noqa: E501

        :return: The tx_data_frames of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._tx_data_frames

    @tx_data_frames.setter
    def tx_data_frames(self, tx_data_frames):
        """Sets the tx_data_frames of this ClientSessionMetricDetails.

        The number of dataframes transmitted TO the client from the AP.  # noqa: E501

        :param tx_data_frames: The tx_data_frames of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._tx_data_frames = tx_data_frames

    @property
    def tx_data_frames_retried(self):
        """Gets the tx_data_frames_retried of this ClientSessionMetricDetails.  # noqa: E501

        The number of data frames transmitted TO the client that were retried. Note this is not the same as the number of retries.  # noqa: E501

        :return: The tx_data_frames_retried of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._tx_data_frames_retried

    @tx_data_frames_retried.setter
    def tx_data_frames_retried(self, tx_data_frames_retried):
        """Sets the tx_data_frames_retried of this ClientSessionMetricDetails.

        The number of data frames transmitted TO the client that were retried. Note this is not the same as the number of retries.  # noqa: E501

        :param tx_data_frames_retried: The tx_data_frames_retried of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._tx_data_frames_retried = tx_data_frames_retried

    @property
    def rx_data_frames(self):
        """Gets the rx_data_frames of this ClientSessionMetricDetails.  # noqa: E501

        The number of dataframes transmitted FROM the client TO the AP.  # noqa: E501

        :return: The rx_data_frames of this ClientSessionMetricDetails.  # noqa: E501
        :rtype: int
        """
        return self._rx_data_frames

    @rx_data_frames.setter
    def rx_data_frames(self, rx_data_frames):
        """Sets the rx_data_frames of this ClientSessionMetricDetails.

        The number of dataframes transmitted FROM the client TO the AP.  # noqa: E501

        :param rx_data_frames: The rx_data_frames of this ClientSessionMetricDetails.  # noqa: E501
        :type: int
        """

        self._rx_data_frames = rx_data_frames

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClientSessionMetricDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClientSessionMetricDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
