# coding: utf-8

"""
    CloudSDK Portal API

    APIs that provide services for provisioning, monitoring, and history retrieval of various data elements of CloudSDK.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from swagger_client.models.profile_details import ProfileDetails  # noqa: F401,E501

class PasspointOsuProviderProfile(ProfileDetails):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'model_type': 'str',
        'passpoint_mcc_mnc_list': 'list[PasspointMccMnc]',
        'nai_realm_list': 'list[PasspointNaiRealmInformation]',
        'passpoint_osu_icon_list': 'list[PasspointOsuIcon]',
        'osu_ssid': 'str',
        'osu_server_uri': 'str',
        'radius_profile_auth': 'str',
        'radius_profile_accounting': 'str',
        'osu_friendly_name': 'list[PasspointDuple]',
        'osu_nai_standalone': 'str',
        'osu_nai_shared': 'str',
        'osu_method_list': 'int',
        'osu_service_description': 'list[PasspointDuple]',
        'roaming_oi': 'list[str]'
    }
    if hasattr(ProfileDetails, "swagger_types"):
        swagger_types.update(ProfileDetails.swagger_types)

    attribute_map = {
        'model_type': 'model_type',
        'passpoint_mcc_mnc_list': 'PasspointMccMncList',
        'nai_realm_list': 'naiRealmList',
        'passpoint_osu_icon_list': 'PasspointOsuIconList',
        'osu_ssid': 'osuSsid',
        'osu_server_uri': 'osuServerUri',
        'radius_profile_auth': 'radiusProfileAuth',
        'radius_profile_accounting': 'radiusProfileAccounting',
        'osu_friendly_name': 'osuFriendlyName',
        'osu_nai_standalone': 'osuNaiStandalone',
        'osu_nai_shared': 'osuNaiShared',
        'osu_method_list': 'osuMethodList',
        'osu_service_description': 'osuServiceDescription',
        'roaming_oi': 'roamingOi'
    }
    if hasattr(ProfileDetails, "attribute_map"):
        attribute_map.update(ProfileDetails.attribute_map)

    def __init__(self, model_type=None, passpoint_mcc_mnc_list=None, nai_realm_list=None, passpoint_osu_icon_list=None, osu_ssid=None, osu_server_uri=None, radius_profile_auth=None, radius_profile_accounting=None, osu_friendly_name=None, osu_nai_standalone=None, osu_nai_shared=None, osu_method_list=None, osu_service_description=None, roaming_oi=None, *args, **kwargs):  # noqa: E501
        """PasspointOsuProviderProfile - a model defined in Swagger"""  # noqa: E501
        self._model_type = None
        self._passpoint_mcc_mnc_list = None
        self._nai_realm_list = None
        self._passpoint_osu_icon_list = None
        self._osu_ssid = None
        self._osu_server_uri = None
        self._radius_profile_auth = None
        self._radius_profile_accounting = None
        self._osu_friendly_name = None
        self._osu_nai_standalone = None
        self._osu_nai_shared = None
        self._osu_method_list = None
        self._osu_service_description = None
        self._roaming_oi = None
        self.discriminator = None
        if model_type is not None:
            self.model_type = model_type
        if passpoint_mcc_mnc_list is not None:
            self.passpoint_mcc_mnc_list = passpoint_mcc_mnc_list
        if nai_realm_list is not None:
            self.nai_realm_list = nai_realm_list
        if passpoint_osu_icon_list is not None:
            self.passpoint_osu_icon_list = passpoint_osu_icon_list
        if osu_ssid is not None:
            self.osu_ssid = osu_ssid
        if osu_server_uri is not None:
            self.osu_server_uri = osu_server_uri
        if radius_profile_auth is not None:
            self.radius_profile_auth = radius_profile_auth
        if radius_profile_accounting is not None:
            self.radius_profile_accounting = radius_profile_accounting
        if osu_friendly_name is not None:
            self.osu_friendly_name = osu_friendly_name
        if osu_nai_standalone is not None:
            self.osu_nai_standalone = osu_nai_standalone
        if osu_nai_shared is not None:
            self.osu_nai_shared = osu_nai_shared
        if osu_method_list is not None:
            self.osu_method_list = osu_method_list
        if osu_service_description is not None:
            self.osu_service_description = osu_service_description
        if roaming_oi is not None:
            self.roaming_oi = roaming_oi
        ProfileDetails.__init__(self, *args, **kwargs)

    @property
    def model_type(self):
        """Gets the model_type of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The model_type of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type):
        """Sets the model_type of this PasspointOsuProviderProfile.


        :param model_type: The model_type of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """
        allowed_values = ["PasspointOsuProviderProfile"]  # noqa: E501
        if model_type not in allowed_values:
            raise ValueError(
                "Invalid value for `model_type` ({0}), must be one of {1}"  # noqa: E501
                .format(model_type, allowed_values)
            )

        self._model_type = model_type

    @property
    def passpoint_mcc_mnc_list(self):
        """Gets the passpoint_mcc_mnc_list of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The passpoint_mcc_mnc_list of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: list[PasspointMccMnc]
        """
        return self._passpoint_mcc_mnc_list

    @passpoint_mcc_mnc_list.setter
    def passpoint_mcc_mnc_list(self, passpoint_mcc_mnc_list):
        """Sets the passpoint_mcc_mnc_list of this PasspointOsuProviderProfile.


        :param passpoint_mcc_mnc_list: The passpoint_mcc_mnc_list of this PasspointOsuProviderProfile.  # noqa: E501
        :type: list[PasspointMccMnc]
        """

        self._passpoint_mcc_mnc_list = passpoint_mcc_mnc_list

    @property
    def nai_realm_list(self):
        """Gets the nai_realm_list of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The nai_realm_list of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: list[PasspointNaiRealmInformation]
        """
        return self._nai_realm_list

    @nai_realm_list.setter
    def nai_realm_list(self, nai_realm_list):
        """Sets the nai_realm_list of this PasspointOsuProviderProfile.


        :param nai_realm_list: The nai_realm_list of this PasspointOsuProviderProfile.  # noqa: E501
        :type: list[PasspointNaiRealmInformation]
        """

        self._nai_realm_list = nai_realm_list

    @property
    def passpoint_osu_icon_list(self):
        """Gets the passpoint_osu_icon_list of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The passpoint_osu_icon_list of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: list[PasspointOsuIcon]
        """
        return self._passpoint_osu_icon_list

    @passpoint_osu_icon_list.setter
    def passpoint_osu_icon_list(self, passpoint_osu_icon_list):
        """Sets the passpoint_osu_icon_list of this PasspointOsuProviderProfile.


        :param passpoint_osu_icon_list: The passpoint_osu_icon_list of this PasspointOsuProviderProfile.  # noqa: E501
        :type: list[PasspointOsuIcon]
        """

        self._passpoint_osu_icon_list = passpoint_osu_icon_list

    @property
    def osu_ssid(self):
        """Gets the osu_ssid of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_ssid of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._osu_ssid

    @osu_ssid.setter
    def osu_ssid(self, osu_ssid):
        """Sets the osu_ssid of this PasspointOsuProviderProfile.


        :param osu_ssid: The osu_ssid of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """

        self._osu_ssid = osu_ssid

    @property
    def osu_server_uri(self):
        """Gets the osu_server_uri of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_server_uri of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._osu_server_uri

    @osu_server_uri.setter
    def osu_server_uri(self, osu_server_uri):
        """Sets the osu_server_uri of this PasspointOsuProviderProfile.


        :param osu_server_uri: The osu_server_uri of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """

        self._osu_server_uri = osu_server_uri

    @property
    def radius_profile_auth(self):
        """Gets the radius_profile_auth of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The radius_profile_auth of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._radius_profile_auth

    @radius_profile_auth.setter
    def radius_profile_auth(self, radius_profile_auth):
        """Sets the radius_profile_auth of this PasspointOsuProviderProfile.


        :param radius_profile_auth: The radius_profile_auth of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """

        self._radius_profile_auth = radius_profile_auth

    @property
    def radius_profile_accounting(self):
        """Gets the radius_profile_accounting of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The radius_profile_accounting of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._radius_profile_accounting

    @radius_profile_accounting.setter
    def radius_profile_accounting(self, radius_profile_accounting):
        """Sets the radius_profile_accounting of this PasspointOsuProviderProfile.


        :param radius_profile_accounting: The radius_profile_accounting of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """

        self._radius_profile_accounting = radius_profile_accounting

    @property
    def osu_friendly_name(self):
        """Gets the osu_friendly_name of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_friendly_name of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: list[PasspointDuple]
        """
        return self._osu_friendly_name

    @osu_friendly_name.setter
    def osu_friendly_name(self, osu_friendly_name):
        """Sets the osu_friendly_name of this PasspointOsuProviderProfile.


        :param osu_friendly_name: The osu_friendly_name of this PasspointOsuProviderProfile.  # noqa: E501
        :type: list[PasspointDuple]
        """

        self._osu_friendly_name = osu_friendly_name

    @property
    def osu_nai_standalone(self):
        """Gets the osu_nai_standalone of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_nai_standalone of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._osu_nai_standalone

    @osu_nai_standalone.setter
    def osu_nai_standalone(self, osu_nai_standalone):
        """Sets the osu_nai_standalone of this PasspointOsuProviderProfile.


        :param osu_nai_standalone: The osu_nai_standalone of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """

        self._osu_nai_standalone = osu_nai_standalone

    @property
    def osu_nai_shared(self):
        """Gets the osu_nai_shared of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_nai_shared of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: str
        """
        return self._osu_nai_shared

    @osu_nai_shared.setter
    def osu_nai_shared(self, osu_nai_shared):
        """Sets the osu_nai_shared of this PasspointOsuProviderProfile.


        :param osu_nai_shared: The osu_nai_shared of this PasspointOsuProviderProfile.  # noqa: E501
        :type: str
        """

        self._osu_nai_shared = osu_nai_shared

    @property
    def osu_method_list(self):
        """Gets the osu_method_list of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_method_list of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: int
        """
        return self._osu_method_list

    @osu_method_list.setter
    def osu_method_list(self, osu_method_list):
        """Sets the osu_method_list of this PasspointOsuProviderProfile.


        :param osu_method_list: The osu_method_list of this PasspointOsuProviderProfile.  # noqa: E501
        :type: int
        """

        self._osu_method_list = osu_method_list

    @property
    def osu_service_description(self):
        """Gets the osu_service_description of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The osu_service_description of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: list[PasspointDuple]
        """
        return self._osu_service_description

    @osu_service_description.setter
    def osu_service_description(self, osu_service_description):
        """Sets the osu_service_description of this PasspointOsuProviderProfile.


        :param osu_service_description: The osu_service_description of this PasspointOsuProviderProfile.  # noqa: E501
        :type: list[PasspointDuple]
        """

        self._osu_service_description = osu_service_description

    @property
    def roaming_oi(self):
        """Gets the roaming_oi of this PasspointOsuProviderProfile.  # noqa: E501


        :return: The roaming_oi of this PasspointOsuProviderProfile.  # noqa: E501
        :rtype: list[str]
        """
        return self._roaming_oi

    @roaming_oi.setter
    def roaming_oi(self, roaming_oi):
        """Sets the roaming_oi of this PasspointOsuProviderProfile.


        :param roaming_oi: The roaming_oi of this PasspointOsuProviderProfile.  # noqa: E501
        :type: list[str]
        """

        self._roaming_oi = roaming_oi

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PasspointOsuProviderProfile, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PasspointOsuProviderProfile):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
