name: Update uCentral

defaults:
  run:
    shell: bash

env:
  AWS_EKS_NAME: tip-wlan-main
  AWS_DEFAULT_OUTPUT: json
  AWS_DEFAULT_REGION: us-east-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CLIENT_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CLIENT_KEY }}

  # DigiCert certs
  DIGICERT_CERT: ${{ secrets.DIGICERT_CERT }}
  DIGICERT_KEY: ${{ secrets.DIGICERT_KEY }}

  # https://stackoverflow.com/questions/59977364/github-actions-how-use-strategy-matrix-with-script
  testbeds: '[
    {
      "namespace": "qa01",
      "ucentralgw_version": "v2.0.0",
      "ucentralsec_version": "v2.0.0",
      "ucentralgwui_version": "v2.0.0"
    },
    {
      "namespace": "dev01",
      "ucentralgw_version": "v2.0.0",
      "ucentralsec_version": "v2.0.0",
      "ucentralgwui_version": "v2.0.0"
    }
  ]'

on:
  workflow_dispatch: {}

jobs:
  generate-matrix:
    name: Generate matrix for build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: generate-matrix
      id: set-matrix
      run: |
        echo '::set-output name=matrix::{"include":${{ env.testbeds }}}'

  deploy:
    name: Update uCentral instances
    runs-on: ubuntu-latest
    needs: [ generate-matrix ]
    strategy:
      matrix: ${{ fromJson( needs.generate-matrix.outputs.matrix ) }}
      fail-fast: false
    steps:

    - name: Checkout uCentral assembly chart repo
      uses: actions/checkout@v2
      with:
        path: wlan-cloud-ucentral-deploy
        repository: Telecominfraproject/wlan-cloud-ucentral-deploy
    - name: Checkout repo with Helm values
      uses: actions/checkout@v2
      with:
        path: wlan-testing

    - name: Prepare certificates from secrets
      run: |
        echo "${{ env.DIGICERT_CERT }}" | base64 -d > cert.pem
        echo "${{ env.DIGICERT_KEY }}" | base64 -d > key.pem

    - name: Fetch kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ env.AWS_EKS_NAME }}

    - name: Deploy uCentralGW
      working-directory: wlan-cloud-ucentral-deploy/chart
      run: |
        helm plugin install https://github.com/aslafy-z/helm-git --version 0.10.0
        sed -i '/wlan-cloud-ucentralgw@/s/ref=.*/ref='${{ matrix.ucentralgw_version }}'\"/g' Chart.yaml
        sed -i '/wlan-cloud-ucentralgw-ui@/s/ref=.*/ref='${{ matrix.ucentralgwui_version }}'\"/g' Chart.yaml
        sed -i '/wlan-cloud-ucentralsec@/s/ref=.*/ref='${{ matrix.ucentralsec_version }}'\"/g' Chart.yaml
        export UCENTRALGW_VERSION_TAG=$(echo ${{ matrix.ucentralgw_version }} | tr '/' '-')
        export UCENTRALGWUI_VERSION_TAG=$(echo ${{ matrix.ucentralgwui_version }} | tr '/' '-')
        export UCENTRALSEC_VERSION_TAG=$(echo ${{ matrix.ucentralsec_version }} | tr '/' '-')
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update
        helm dependency update
        helm upgrade --install --create-namespace \
          --namespace ucentral-${{ matrix.namespace }} --wait --timeout 20m \
          -f ../../wlan-testing/helm/ucentral/values.ucentral-qa.yaml \
          --set ucentralgw.configProperties."rtty\.token"=${{ secrets.RTTY_TOKEN }} \
          --set ucentralsec.configProperties."authentication\.default\.username"=${{ secrets.UCENTRALGW_AUTH_USERNAME }} \
          --set ucentralsec.configProperties."authentication\.default\.password"=${{ secrets.UCENTRALGW_AUTH_PASSWORD }} \
          --set rttys.config.token=${{ secrets.RTTY_TOKEN }} \
          --set ucentralgw.services.ucentralgw.annotations."external-dns\.alpha\.kubernetes\.io/hostname"=gw-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralgw.configProperties."ucentral\.fileuploader\.host\.0\.name"=gw-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralgw.configProperties."rtty\.server"=rtty-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralgw.configProperties."ucentral\.system\.uri\.public"=https://gw-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build:16002 \
          --set ucentralgw.configProperties."ucentral\.system\.uri\.private"=https://gw-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build:17002 \
          --set ucentralgw.configProperties."ucentral\.system\.uri\.ui"=https://webui-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralsec.services.ucentralsec.annotations."external-dns\.alpha\.kubernetes\.io/hostname"=sec-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralsec.configProperties."ucentral\.system\.uri\.public"=https://sec-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build:16001 \
          --set ucentralsec.configProperties."ucentral\.system\.uri\.private"=https://sec-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build:17001 \
          --set ucentralsec.configProperties."ucentral\.system\.uri\.ui"=https://webui-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set rttys.services.rttys.annotations."external-dns\.alpha\.kubernetes\.io/hostname"=rtty-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralgwui.ingresses.default.annotations."external-dns\.alpha\.kubernetes\.io/hostname"=webui-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build \
          --set ucentralgwui.ingresses.default.hosts={webui-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build} \
          --set ucentralgwui.public_env_variables.DEFAULT_UCENTRALSEC_URL=https://sec-ucentral-${{ matrix.namespace }}.cicd.lab.wlan.tip.build:16001 \
          --set-file ucentralgw.certs."restapi-cert\.pem"=../../cert.pem \
          --set-file ucentralgw.certs."restapi-key\.pem"=../../key.pem \
          --set-file ucentralgw.certs."websocket-cert\.pem"=../../cert.pem \
          --set-file ucentralgw.certs."websocket-key\.pem"=../../key.pem \
          --set-file rttys.certs."restapi-cert\.pem"=../../cert.pem \
          --set-file rttys.certs."restapi-key\.pem"=../../key.pem \
          --set-file ucentralsec.certs."restapi-cert\.pem"=../../cert.pem \
          --set-file ucentralsec.certs."restapi-key\.pem"=../../key.pem \
          --set ucentralgw.images.ucentralgw.tag=$UCENTRALGW_VERSION_TAG \
          --set ucentralgwui.images.ucentralgwui.tag=$UCENTRALGWUI_VERSION_TAG \
          --set ucentralsec.images.ucentralsec.tag=$UCENTRALSEC_VERSION_TAG \
          tip-ucentral .

    - name: Show resource state on deployment failure
      if: failure()
      run: |
        kubectl get pods --namespace ucentral-${{ matrix.namespace }}
        kubectl get services --namespace ucentral-${{ matrix.namespace }}
        kubectl get persistentvolumeclaims --namespace ucentral-${{ matrix.namespace }}
    - name: Describe pods on deployment failure
      if: failure()
      run: |
        kubectl describe pods --namespace ucentral-${{ matrix.namespace }}
    - name: Describe services on deployment failure
      if: failure()
      run: |
        kubectl describe services --namespace ucentral-${{ matrix.namespace }}
    - name: Describe persistentvolumeclaims on deployment failure
      if: failure()
      run: |
        kubectl describe persistentvolumeclaims --namespace ucentral-${{ matrix.namespace }}

    - name: Rollback Cloud SDK
      if: failure()
      run: |
        helm rollback tip-ucentral --namespace ucentral-${{ matrix.namespace }} --wait --timeout 20m

