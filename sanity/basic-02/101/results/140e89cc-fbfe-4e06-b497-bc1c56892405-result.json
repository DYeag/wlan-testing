{"name": "test_wpa_enterprise_2g[setup_profiles0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <tests.e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestbridgeModeEnterpriseTTLSSuiteOne object at 0x7f4ec42839a0>\nget_vif_state = ['ssid_wpa2_eap_2g', 'ssid_wpa2_eap_5g', 'ssid_wpa3_eap_2g', 'ssid_wpa3_eap_5g', 'ssid_wpa_eap_2g', 'ssid_wpa_eap_5g']\nstation_names_twog = ['wlan000']\nsetup_profiles = {'equipment_ap': True, 'radius_profile': True, 'vifc': True, 'vifs': True}\nget_lanforge_data = {'lanforge-port-number': 8080, 'lanforge_2dot4g': 'wiphy4', 'lanforge_2dot4g_prefix': 'wlan0', 'lanforge_2dot4g_station': 'wlan0', ...}\nlf_test = <lanforge.lf_tests.RunTest object at 0x7f4ec4218460>\nupdate_report = <testrails.reporting.Reporting object at 0x7f4ec8464be0>\ntest_cases = {'2g_open_bridge': 2234, '2g_open_nat': 4321, '2g_open_vlan': 9897, '2g_wpa2_bridge': 2237, ...}\nradius_info = {'ip': '10.10.10.72', 'name': 'basic-02-Automation-Radius-Profile-BRIDGE', 'password': 'password', 'pk_password': 'whatever', ...}\nexit_on_fail = False\n\n    @pytest.mark.wpa_enterprise\n    @pytest.mark.twog\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_wpa_enterprise_2g(self, get_vif_state,station_names_twog, setup_profiles, get_lanforge_data, lf_test, update_report,\n                               test_cases, radius_info, exit_on_fail):\n        profile_data = setup_params_enterprise[\"ssid_modes\"][\"wpa_enterprise\"][0]\n        ssid_name = profile_data[\"ssid_name\"]\n        security = \"wpa\"\n        extra_secu = [\"wpa2\"]\n    \n        band = \"twog\"\n        vlan = 1\n        ttls_passwd = radius_info[\"password\"]\n        eap = \"TTLS\"\n        identity = radius_info['user']\n        ieee80211w = 1\n        if ssid_name not in get_vif_state:\n            allure.attach(name=\"retest,vif state ssid not available:\", body=str(get_vif_state))\n            pytest.xfail(\"SSID NOT AVAILABLE IN VIF STATE\")\n        passes = lf_test.EAP_Connect(ssid=ssid_name, security=security, extra_securities=extra_secu,\n                                     mode=mode, band=band, ieee80211w=ieee80211w,\n                                     eap=eap, ttls_passwd=ttls_passwd, identity=identity,\n                                     station_name=station_names_twog, vlan_id=vlan)\n    \n        if passes:\n            update_report.update_testrail(case_id=test_cases[\"2g_wpa_eap_ttls_bridge\"],\n                                          status_id=1,\n                                          msg='2G WPA Enterprise Client Connectivity Passed successfully - bridge mode' + str(\n                                              passes))\n        else:\n            update_report.update_testrail(case_id=test_cases[\"2g_wpa_eap_ttls_bridge\"],\n                                          status_id=5,\n                                          msg='2G WPA Enterprise Client Connectivity Failed - bridge mode' + str(\n                                              passes))\n            if exit_on_fail:\n                pytest.exit(\"Test Case Failed\")\n>       assert passes\nE       assert False\n\ne2e/basic/validation_of_operating_modes/bridge_mode/client_connectivity/test_enterprise_ttls.py:72: AssertionError"}, "attachments": [{"name": "wlan000", "source": "77d42358-26fd-4b71-88c2-40bec1801afb-attachment.attach"}, {"name": "cx_data", "source": "45b48066-a927-43ad-bbe1-3b438d4ebbea-attachment.attach"}, {"name": "2G WPA Enterprise Client Connectivity Failed - bridge modeFalse", "source": "57ff7176-5901-4c16-96da-0e989c0a0c73-attachment.attach"}, {"name": "log", "source": "faf9657b-b643-48c0-b545-788e7cf932ed-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "setup_profiles", "value": "{'mode': 'BRIDGE', 'ssid_modes': {'wpa_enterprise': [{'ssid_name': 'ssid_wpa_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_eap_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_enterprise': [{'ssid_name': 'ssid_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_eap_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa2_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa3_enterprise': [{'ssid_name': 'ssid_wpa3_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa3_eap_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-02-SSID-wpa3_enterprise-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': True}"}], "start": 1627965641932, "stop": 1627965839376, "uuid": "8f989d35-f842-4225-9a89-c720396791a7", "historyId": "ef4426ea0c5aac553404f5bdd98bc9a6", "testCaseId": "aa98aefeb5c02a4d36c30e88dd2c54a3", "fullName": "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestbridgeModeEnterpriseTTLSSuiteOne#test_wpa_enterprise_2g", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "bridge"}, {"name": "tag", "value": "wpa_enterprise"}, {"name": "tag", "value": "client_connectivity"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "enterprise"}, {"name": "tag", "value": "ttls"}, {"name": "tag", "value": "twog"}, {"name": "parentSuite", "value": "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity"}, {"name": "suite", "value": "test_enterprise_ttls"}, {"name": "subSuite", "value": "TestbridgeModeEnterpriseTTLSSuiteOne"}, {"name": "host", "value": "testing-101-tg9nl"}, {"name": "thread", "value": "6-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls"}]}