{
  "uid" : "33d6d391af09142b",
  "name" : "test_verify_vif_state[setup_profiles0]",
  "fullName" : "e2e.basic.configuration_tests.bridge_mode.test_general_security_modes_configuration.TestSetupBridgeSuiteA#test_verify_vif_state",
  "historyId" : "4a66ab8af2119ef5d86b0a06d0301b9f",
  "time" : {
    "start" : 1624352545090,
    "stop" : 1624352745174,
    "duration" : 200084
  },
  "description" : " vifs SuiteA General ",
  "descriptionHtml" : "<p>vifs SuiteA General</p>\n",
  "status" : "broken",
  "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Tue, 22 Jun 2021 09:05:47 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"ResourceAccessException\",\n  \"error\" : \"I/O error on GET request for \\\"https://tip-wlan-prov-service:9091/api/profile/forCustomer\\\": Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused\",\n  \"path\" : \"/portal/profile/forCustomer?customerId=2&amp;paginationContext=%7B%0A++++++++++++++++++++++++++++++++++++++++++++++++%22model_type%22%3A+%22PaginationContext%22%2C%0A++++++++++++++++++++++++++++++++++++++++++++++++%22maxItemsPerPage%22%3A+5000%0A++++++++++++++++++++++++++++++++++++++++%7D\",\n  \"timestamp\" : 1624352746916\n}",
  "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7f6de82e7700>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:611: in teardown_session\n    instantiate_profile.delete_profile_by_name(profile_name=profile_data['equipment_ap']['profile_name'])\n../libs/controller/controller.py:432: in delete_profile_by_name\n    all_profiles = self.profile_client.get_profiles_by_customer_id(customer_id=self.sdk_client.customer_id,\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:527: in get_profiles_by_customer_id\n    (data) = self.get_profiles_by_customer_id_with_http_info(customer_id, pagination_context, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:603: in get_profiles_by_customer_id_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:338: in request\n    return self.rest_client.GET(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:233: in GET\n    return self.request(\"GET\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7f6de9a40760>\nmethod = 'GET'\nurl = 'https://wlan-portal-svc-nola-ext-04.cicd.lab.wlan.tip.build/portal/profile/forCustomer'\nquery_params = [('customerId', 2), ('paginationContext', '{\\n                                                \"model_type\": \"Paginatio...\\n                                                \"maxItemsPerPage\": 5000\\n                                        }')]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiJkZTkwY2E5NS0yZWJjLTRjMjgtOTNkZC0wZT....TLVcZCPpyruHng.0VZ4MrhgdXr9j91LRd1', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 22 Jun 2021 09:05:47 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"ResourceAccessException\",\nE             \"error\" : \"I/O error on GET request for \\\"https://tip-wlan-prov-service:9091/api/profile/forCustomer\\\": Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused\",\nE             \"path\" : \"/portal/profile/forCustomer?customerId=2&amp;paginationContext=%7B%0A++++++++++++++++++++++++++++++++++++++++++++++++%22model_type%22%3A+%22PaginationContext%22%2C%0A++++++++++++++++++++++++++++++++++++++++++++++++%22maxItemsPerPage%22%3A+5000%0A++++++++++++++++++++++++++++++++++++++++%7D\",\nE             \"timestamp\" : 1624352746916\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "should_upgrade_firmware",
    "time" : {
      "start" : 1624351789488,
      "stop" : 1624351789488,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624351800234,
      "stop" : 1624351800234,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4c778c7a9d3b4aac",
      "name" : "VLAN Created: ",
      "source" : "4c778c7a9d3b4aac.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "upgrade_firmware",
    "time" : {
      "start" : 1624351789488,
      "stop" : 1624351791961,
      "duration" : 2473
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fe382755bc8a0e47",
      "name" : "APNOS LIbrary: ",
      "source" : "fe382755bc8a0e47.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "7cfd2e662f9a2b15",
      "name" : "openwrt_ctl Setup",
      "source" : "7cfd2e662f9a2b15.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "c784037ac2a695e9",
      "name" : "get_active_firmware ",
      "source" : "c784037ac2a695e9.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624351787566,
      "stop" : 1624351787566,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9f8e0c4307bf15b",
      "name" : "Testbed Selected : ",
      "source" : "9f8e0c4307bf15b.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624351787566,
      "stop" : 1624351787567,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8addcb0f0335cbad",
      "name" : "Testbed Selected: ",
      "source" : "8addcb0f0335cbad.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624351800235,
      "stop" : 1624351800235,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624351787567,
      "stop" : 1624351787567,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run",
    "time" : {
      "start" : 1624351791961,
      "stop" : 1624351794477,
      "duration" : 2516
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e46288d767693da5",
      "name" : "APNOS LIbrary: ",
      "source" : "e46288d767693da5.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "ec5dd8c8e3a7f43b",
      "name" : "openwrt_ctl Setup",
      "source" : "ec5dd8c8e3a7f43b.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "e2c7884a5031b6b2",
      "name" : "get_active_firmware ",
      "source" : "e2c7884a5031b6b2.attach",
      "type" : "text/plain",
      "size" : 33
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_firmware",
    "time" : {
      "start" : 1624351789188,
      "stop" : 1624351789188,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases",
    "time" : {
      "start" : 1624351794477,
      "stop" : 1624351794477,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1624351800236,
      "stop" : 1624351800549,
      "duration" : 313
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware",
    "time" : {
      "start" : 1624351789488,
      "stop" : 1624351789488,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report",
    "time" : {
      "start" : 1624351794477,
      "stop" : 1624351794477,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624351800235,
      "stop" : 1624351800236,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "212a2cd68a60351b",
      "name" : "Test Cases Requires: ",
      "source" : "212a2cd68a60351b.attach",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "should_upload_firmware",
    "time" : {
      "start" : 1624351789488,
      "stop" : 1624351789488,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624351800235,
      "stop" : 1624351800235,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624352415810,
      "stop" : 1624352545067,
      "duration" : 129257
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8529ecde6466fddf",
      "name" : "RF Profile Created : wifi6",
      "source" : "8529ecde6466fddf.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "86e6ee99e8b6b54e",
      "name" : "SSID Profile Created",
      "source" : "86e6ee99e8b6b54e.attach",
      "type" : "text/plain",
      "size" : 2813
    }, {
      "uid" : "d3f94d616b14e4ae",
      "name" : "SSID Profile Created",
      "source" : "d3f94d616b14e4ae.attach",
      "type" : "text/plain",
      "size" : 2831
    }, {
      "uid" : "76a8056096fb9a90",
      "name" : "SSID Profile Created",
      "source" : "76a8056096fb9a90.attach",
      "type" : "text/plain",
      "size" : 2806
    }, {
      "uid" : "6ec15d94f9f55861",
      "name" : "SSID Profile Created",
      "source" : "6ec15d94f9f55861.attach",
      "type" : "text/plain",
      "size" : 2824
    }, {
      "uid" : "df34d8c9890d8883",
      "name" : "SSID Profile Created",
      "source" : "df34d8c9890d8883.attach",
      "type" : "text/plain",
      "size" : 2822
    }, {
      "uid" : "780d3e79a57d5738",
      "name" : "SSID Profile Created",
      "source" : "780d3e79a57d5738.attach",
      "type" : "text/plain",
      "size" : 2840
    }, {
      "uid" : "28ef13b8a670e506",
      "name" : "Equipment AP Profile Created",
      "source" : "28ef13b8a670e506.attach",
      "type" : "text/plain",
      "size" : 48
    }, {
      "uid" : "d7a238cf78d29c11",
      "name" : "APNOS LIbrary: ",
      "source" : "d7a238cf78d29c11.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "1ce8b1578470c800",
      "name" : "openwrt_ctl Setup",
      "source" : "1ce8b1578470c800.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "6fc7c36b7a55ac1e",
      "name" : "vif config Output Msg: ",
      "source" : "6fc7c36b7a55ac1e.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "fc3c1daf4a612668",
      "name" : "vif config Err Msg: ",
      "source" : "fc3c1daf4a612668.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "e9f0f5dd0f7795c5",
      "name" : "get_vif_config_ssids ",
      "source" : "e9f0f5dd0f7795c5.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "3f792867e33bd9df",
      "name" : "vif config Output Msg: ",
      "source" : "3f792867e33bd9df.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "40ee0f2e98240b11",
      "name" : "vif config Err Msg: ",
      "source" : "40ee0f2e98240b11.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d8e385fa21db6aed",
      "name" : "get_vif_config_ssids ",
      "source" : "d8e385fa21db6aed.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "d56d9f7d22c8eb5d",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "d56d9f7d22c8eb5d.attach",
      "type" : "text/plain",
      "size" : 230
    }, {
      "uid" : "d8af7c00892b5c03",
      "name" : "APNOS LIbrary: ",
      "source" : "d8af7c00892b5c03.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "18ff0e683d5658eb",
      "name" : "openwrt_ctl Setup",
      "source" : "18ff0e683d5658eb.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "df3f0899a551918b",
      "name" : "vif state Output Msg: ",
      "source" : "df3f0899a551918b.attach",
      "type" : "text/plain",
      "size" : 4046
    }, {
      "uid" : "962dc58ef2ee0e0a",
      "name" : "vif state Err Msg: ",
      "source" : "962dc58ef2ee0e0a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "12d8673d0714faba",
      "name" : "get_vif_state_ssids ",
      "source" : "12d8673d0714faba.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "2d90f033210d517",
      "name" : "vif config Output Msg: ",
      "source" : "2d90f033210d517.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "15eb7f187e8c6753",
      "name" : "vif config Err Msg: ",
      "source" : "15eb7f187e8c6753.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a529c5e39b988e8a",
      "name" : "get_vif_config_ssids ",
      "source" : "a529c5e39b988e8a.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "f900d1b5ee438d92",
      "name" : "vif state Output Msg: ",
      "source" : "f900d1b5ee438d92.attach",
      "type" : "text/plain",
      "size" : 4046
    }, {
      "uid" : "5c06b588de6b1d17",
      "name" : "vif state Err Msg: ",
      "source" : "5c06b588de6b1d17.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "643c92ff1676ff6b",
      "name" : "get_vif_state_ssids ",
      "source" : "643c92ff1676ff6b.attach",
      "type" : "text/plain",
      "size" : 30
    }, {
      "uid" : "c4012584ebfcf7d5",
      "name" : "vif config Output Msg: ",
      "source" : "c4012584ebfcf7d5.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "839b3d6d57a558b7",
      "name" : "vif config Err Msg: ",
      "source" : "839b3d6d57a558b7.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "540a5aceb274a79e",
      "name" : "get_vif_config_ssids ",
      "source" : "540a5aceb274a79e.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "cea76223e03a2c37",
      "name" : "vif state Output Msg: ",
      "source" : "cea76223e03a2c37.attach",
      "type" : "text/plain",
      "size" : 3972
    }, {
      "uid" : "f67655d656849ceb",
      "name" : "vif state Err Msg: ",
      "source" : "f67655d656849ceb.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "620f2d828cea8cec",
      "name" : "get_vif_state_ssids ",
      "source" : "620f2d828cea8cec.attach",
      "type" : "text/plain",
      "size" : 32
    }, {
      "uid" : "106ea86c14530967",
      "name" : "vif config Output Msg: ",
      "source" : "106ea86c14530967.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "88784f06e2a8b742",
      "name" : "vif config Err Msg: ",
      "source" : "88784f06e2a8b742.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "20c314f86ad49dd3",
      "name" : "get_vif_config_ssids ",
      "source" : "20c314f86ad49dd3.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "1bc328276e8c0f77",
      "name" : "vif state Output Msg: ",
      "source" : "1bc328276e8c0f77.attach",
      "type" : "text/plain",
      "size" : 7629
    }, {
      "uid" : "b1f6b5a84ecea28a",
      "name" : "vif state Err Msg: ",
      "source" : "b1f6b5a84ecea28a.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "43852edc31ab59f7",
      "name" : "get_vif_state_ssids ",
      "source" : "43852edc31ab59f7.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "fcaf216265b885b8",
      "name" : "vif config Output Msg: ",
      "source" : "fcaf216265b885b8.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "9a74bd1630602b35",
      "name" : "vif config Err Msg: ",
      "source" : "9a74bd1630602b35.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "93eb7e6b32a5b159",
      "name" : "get_vif_config_ssids ",
      "source" : "93eb7e6b32a5b159.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "a84ba47620351161",
      "name" : "vif state Output Msg: ",
      "source" : "a84ba47620351161.attach",
      "type" : "text/plain",
      "size" : 7629
    }, {
      "uid" : "408419ad4f8fbba4",
      "name" : "vif state Err Msg: ",
      "source" : "408419ad4f8fbba4.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "a0454fc650df3ff6",
      "name" : "get_vif_state_ssids ",
      "source" : "a0454fc650df3ff6.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "5180714b444ee020",
      "name" : "vif config Output Msg: ",
      "source" : "5180714b444ee020.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "4b1d9497edc5249d",
      "name" : "vif config Err Msg: ",
      "source" : "4b1d9497edc5249d.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "930e31943a253063",
      "name" : "get_vif_config_ssids ",
      "source" : "930e31943a253063.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "ad11a65f3ef28b59",
      "name" : "vif state Output Msg: ",
      "source" : "ad11a65f3ef28b59.attach",
      "type" : "text/plain",
      "size" : 7629
    }, {
      "uid" : "bdbe10d80dda597b",
      "name" : "vif state Err Msg: ",
      "source" : "bdbe10d80dda597b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1941ba3680d92a4",
      "name" : "get_vif_state_ssids ",
      "source" : "1941ba3680d92a4.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "406d8d10bae6eb42",
      "name" : "vif config Output Msg: ",
      "source" : "406d8d10bae6eb42.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "80db8b5c79e4be6c",
      "name" : "vif config Err Msg: ",
      "source" : "80db8b5c79e4be6c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "79b7acb0ed36933f",
      "name" : "get_vif_config_ssids ",
      "source" : "79b7acb0ed36933f.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "e1ced24a8c960861",
      "name" : "vif state Output Msg: ",
      "source" : "e1ced24a8c960861.attach",
      "type" : "text/plain",
      "size" : 11288
    }, {
      "uid" : "75c87053235df7ad",
      "name" : "vif state Err Msg: ",
      "source" : "75c87053235df7ad.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6bbe72ade8862f2b",
      "name" : "get_vif_state_ssids ",
      "source" : "6bbe72ade8862f2b.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "ef237fa2a7c629cc",
      "name" : "vif config Output Msg: ",
      "source" : "ef237fa2a7c629cc.attach",
      "type" : "text/plain",
      "size" : 10094
    }, {
      "uid" : "4e8a716a49034a5",
      "name" : "vif config Err Msg: ",
      "source" : "4e8a716a49034a5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "5cc5e55474c583c2",
      "name" : "get_vif_config_ssids ",
      "source" : "5cc5e55474c583c2.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "2efa52f18008a361",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "2efa52f18008a361.attach",
      "type" : "text/plain",
      "size" : 212
    }, {
      "uid" : "a73d17b59a01e1a9",
      "name" : "AP LOgs: ",
      "source" : "a73d17b59a01e1a9.attach",
      "type" : "text/plain",
      "size" : 77971
    }, {
      "uid" : "90cd48c244148615",
      "name" : "vif state Output Msg: ",
      "source" : "90cd48c244148615.attach",
      "type" : "text/plain",
      "size" : 11288
    }, {
      "uid" : "c225d5cd49049580",
      "name" : "vif state Err Msg: ",
      "source" : "c225d5cd49049580.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "2893226151e40752",
      "name" : "SSID DATA IN LF DUT",
      "source" : "2893226151e40752.attach",
      "type" : "text/plain",
      "size" : 524
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 66,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1624351803751,
      "stop" : 1624351803751,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d24fbe741a15d08c",
      "name" : "Radius server Info: ",
      "source" : "d24fbe741a15d08c.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624351789025,
      "stop" : 1624351789188,
      "duration" : 163
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d9e33cac5c4f9c13",
      "name" : "Controller Instantiated: ",
      "source" : "d9e33cac5c4f9c13.attach",
      "type" : "text/plain",
      "size" : 186
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624351787567,
      "stop" : 1624351789025,
      "duration" : 1458
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f0ccd9d941b9eca2",
      "name" : "added openwrtctl.py to :",
      "source" : "f0ccd9d941b9eca2.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "12f73fe9198bc2b2",
      "name" : "APNOS LIbrary: ",
      "source" : "12f73fe9198bc2b2.attach",
      "type" : "text/plain",
      "size" : 313
    }, {
      "uid" : "bd25a181425335a7",
      "name" : "openwrt_ctl Setup",
      "source" : "bd25a181425335a7.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "check_ap_firmware_cloud",
    "time" : {
      "start" : 1624351789418,
      "stop" : 1624351789488,
      "duration" : 70
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624351789188,
      "stop" : 1624351789417,
      "duration" : 229
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1624351800550,
      "stop" : 1624351803750,
      "duration" : 3200
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : " vifs SuiteA General ",
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Tue, 22 Jun 2021 09:05:47 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"ResourceAccessException\",\n  \"error\" : \"I/O error on GET request for \\\"https://tip-wlan-prov-service:9091/api/profile/forCustomer\\\": Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused\",\n  \"path\" : \"/portal/profile/forCustomer?customerId=2&amp;paginationContext=%7B%0A++++++++++++++++++++++++++++++++++++++++++++++++%22model_type%22%3A+%22PaginationContext%22%2C%0A++++++++++++++++++++++++++++++++++++++++++++++++%22maxItemsPerPage%22%3A+5000%0A++++++++++++++++++++++++++++++++++++++++%7D\",\n  \"timestamp\" : 1624352746916\n}",
    "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7f6de82e7700>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:611: in teardown_session\n    instantiate_profile.delete_profile_by_name(profile_name=profile_data['equipment_ap']['profile_name'])\n../libs/controller/controller.py:432: in delete_profile_by_name\n    all_profiles = self.profile_client.get_profiles_by_customer_id(customer_id=self.sdk_client.customer_id,\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:527: in get_profiles_by_customer_id\n    (data) = self.get_profiles_by_customer_id_with_http_info(customer_id, pagination_context, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:603: in get_profiles_by_customer_id_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:338: in request\n    return self.rest_client.GET(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:233: in GET\n    return self.request(\"GET\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7f6de9a40760>\nmethod = 'GET'\nurl = 'https://wlan-portal-svc-nola-ext-04.cicd.lab.wlan.tip.build/portal/profile/forCustomer'\nquery_params = [('customerId', 2), ('paginationContext', '{\\n                                                \"model_type\": \"Paginatio...\\n                                                \"maxItemsPerPage\": 5000\\n                                        }')]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiJkZTkwY2E5NS0yZWJjLTRjMjgtOTNkZC0wZT....TLVcZCPpyruHng.0VZ4MrhgdXr9j91LRd1', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 22 Jun 2021 09:05:47 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"ResourceAccessException\",\nE             \"error\" : \"I/O error on GET request for \\\"https://tip-wlan-prov-service:9091/api/profile/forCustomer\\\": Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused\",\nE             \"path\" : \"/portal/profile/forCustomer?customerId=2&amp;paginationContext=%7B%0A++++++++++++++++++++++++++++++++++++++++++++++++%22model_type%22%3A+%22PaginationContext%22%2C%0A++++++++++++++++++++++++++++++++++++++++++++++++%22maxItemsPerPage%22%3A+5000%0A++++++++++++++++++++++++++++++++++++++++%7D\",\nE             \"timestamp\" : 1624352746916\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4f8f6946cb5c0b2a",
      "name" : "profile pushed successfully",
      "source" : "4f8f6946cb5c0b2a.attach",
      "type" : "application/octet-stream",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "should_upgrade_firmware::0",
    "time" : {
      "start" : 1624352785423,
      "stop" : 1624352785423,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624352785396,
      "stop" : 1624352785396,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware::0",
    "time" : {
      "start" : 1624352785410,
      "stop" : 1624352785410,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624352785558,
      "stop" : 1624352785558,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624352785536,
      "stop" : 1624352785536,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624352785392,
      "stop" : 1624352785392,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624352785499,
      "stop" : 1624352785499,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run::0",
    "time" : {
      "start" : 1624352785401,
      "stop" : 1624352785401,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware::0",
    "time" : {
      "start" : 1624352785461,
      "stop" : 1624352785461,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases::0",
    "time" : {
      "start" : 1624352785397,
      "stop" : 1624352785397,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1624352785378,
      "stop" : 1624352785378,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware::0",
    "time" : {
      "start" : 1624352785434,
      "stop" : 1624352785434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report::0",
    "time" : {
      "start" : 1624352785397,
      "stop" : 1624352785397,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624352785382,
      "stop" : 1624352785382,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upload_firmware::0",
    "time" : {
      "start" : 1624352785417,
      "stop" : 1624352785417,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624352785389,
      "stop" : 1624352785389,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624352745175,
      "stop" : 1624352745175,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624352745175,
      "stop" : 1624352747005,
      "duration" : 1830
    },
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Tue, 22 Jun 2021 09:05:47 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"ResourceAccessException\",\n  \"error\" : \"I/O error on GET request for \\\"https://tip-wlan-prov-service:9091/api/profile/forCustomer\\\": Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused\",\n  \"path\" : \"/portal/profile/forCustomer?customerId=2&amp;paginationContext=%7B%0A++++++++++++++++++++++++++++++++++++++++++++++++%22model_type%22%3A+%22PaginationContext%22%2C%0A++++++++++++++++++++++++++++++++++++++++++++++++%22maxItemsPerPage%22%3A+5000%0A++++++++++++++++++++++++++++++++++++++++%7D\",\n  \"timestamp\" : 1624352746916\n}\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 611, in teardown_session\n    instantiate_profile.delete_profile_by_name(profile_name=profile_data['equipment_ap']['profile_name'])\n  File \"/wlan-testing/tests/../libs/controller/controller.py\", line 432, in delete_profile_by_name\n    all_profiles = self.profile_client.get_profiles_by_customer_id(customer_id=self.sdk_client.customer_id,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 527, in get_profiles_by_customer_id\n    (data) = self.get_profiles_by_customer_id_with_http_info(customer_id, pagination_context, **kwargs)  # noqa: E501\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 603, in get_profiles_by_customer_id_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 316, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 148, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 338, in request\n    return self.rest_client.GET(url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 233, in GET\n    return self.request(\"GET\", url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 227, in request\n    raise ApiException(http_resp=r)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624352785367,
      "stop" : 1624352785367,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624352785480,
      "stop" : 1624352785480,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624352785480,
      "stop" : 1624352785480,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "70da86f6bbe71159",
      "name" : "Controller Teardown: ",
      "source" : "70da86f6bbe71159.attach",
      "type" : "text/plain",
      "size" : 186
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624352785485,
      "stop" : 1624352785485,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud::0",
    "time" : {
      "start" : 1624352785438,
      "stop" : 1624352785438,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624352785453,
      "stop" : 1624352785453,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "BRIDGE MODE SETUP"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "tag",
    "value" : "general"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "setup"
  }, {
    "name" : "tag",
    "value" : "sanity_light"
  }, {
    "name" : "tag",
    "value" : "suiteA"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.configuration_tests.bridge_mode"
  }, {
    "name" : "suite",
    "value" : "test_general_security_modes_configuration"
  }, {
    "name" : "subSuite",
    "value" : "TestSetupBridgeSuiteA"
  }, {
    "name" : "host",
    "value" : "nightly-ci-509-z29tm"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.configuration_tests.bridge_mode.test_general_security_modes_configuration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_open_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-open-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': False}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 18
      },
      "items" : [ {
        "uid" : "b82df38c5a5ef5a3",
        "status" : "passed",
        "time" : {
          "start" : 1624254182200,
          "stop" : 1624254382300,
          "duration" : 200100
        }
      }, {
        "uid" : "d19fa92f972e65d1",
        "status" : "passed",
        "time" : {
          "start" : 1624216448066,
          "stop" : 1624216648155,
          "duration" : 200089
        }
      }, {
        "uid" : "a2e88dc222ab1a3f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1624201644463,
          "stop" : 1624201844561,
          "duration" : 200098
        }
      }, {
        "uid" : "62bbf7b66d69539c",
        "status" : "broken",
        "statusDetails" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Sun, 20 Jun 2021 10:52:29 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"IllegalStateException\",\n  \"error\" : \"Profile with id 7409 is in use by 1 network equipment and cannot be deleted\",\n  \"path\" : \"/portal/profile?profileId=7409\",\n  \"timestamp\" : 1624186349342\n}",
        "time" : {
          "start" : 1624186350438,
          "stop" : 1624186350438,
          "duration" : 0
        }
      }, {
        "uid" : "e6cf01288b18bb40",
        "status" : "passed",
        "time" : {
          "start" : 1623976792215,
          "stop" : 1623976992313,
          "duration" : 200098
        }
      }, {
        "uid" : "4ea5f308f70cc7a3",
        "status" : "passed",
        "time" : {
          "start" : 1623963986809,
          "stop" : 1623964186903,
          "duration" : 200094
        }
      }, {
        "uid" : "2495ac6669852cc8",
        "status" : "passed",
        "time" : {
          "start" : 1623890409255,
          "stop" : 1623890609353,
          "duration" : 200098
        }
      }, {
        "uid" : "5824440e0c2280ee",
        "status" : "passed",
        "time" : {
          "start" : 1623804005777,
          "stop" : 1623804205873,
          "duration" : 200096
        }
      }, {
        "uid" : "b6c46f90b8f19a93",
        "status" : "passed",
        "time" : {
          "start" : 1623759492229,
          "stop" : 1623759692342,
          "duration" : 200113
        }
      }, {
        "uid" : "2bc02e27dc25ca8a",
        "status" : "passed",
        "time" : {
          "start" : 1623717579600,
          "stop" : 1623717779700,
          "duration" : 200100
        }
      }, {
        "uid" : "123df8b8043a40e4",
        "status" : "passed",
        "time" : {
          "start" : 1623666391695,
          "stop" : 1623666591795,
          "duration" : 200100
        }
      }, {
        "uid" : "11e98e686b2e7fda",
        "status" : "passed",
        "time" : {
          "start" : 1623631179360,
          "stop" : 1623631379460,
          "duration" : 200100
        }
      }, {
        "uid" : "6f1e57d41c4c6b28",
        "status" : "passed",
        "time" : {
          "start" : 1623493214087,
          "stop" : 1623493414175,
          "duration" : 200088
        }
      }, {
        "uid" : "e77aaf0ec2af91c1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1623413007945,
          "stop" : 1623413208046,
          "duration" : 200101
        }
      }, {
        "uid" : "ef66abd2a66109cf",
        "status" : "broken",
        "statusDetails" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Fri, 11 Jun 2021 11:38:27 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"ResourceAccessException\",\n  \"error\" : \"I/O error on GET request for \\\"https://tip-wlan-prov-service:9091/api/equipment/forCustomer\\\": Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to tip-wlan-prov-service:9091 [tip-wlan-prov-service/172.20.29.206] failed: Connection refused\",\n  \"path\" : \"/portal/equipment/forCustomer?customerId=2&amp;paginationContext=%7B%0A++++++++++++++++%22model_type%22%3A+%22PaginationContext%22%2C%0A++++++++++++++++%22maxItemsPerPage%22%3A+100%0A++++++++%7D\",\n  \"timestamp\" : 1623411507541\n}",
        "time" : {
          "start" : 1623411518344,
          "stop" : 1623411518344,
          "duration" : 0
        }
      }, {
        "uid" : "b1315fcb8300c3b4",
        "status" : "passed",
        "time" : {
          "start" : 1623402848976,
          "stop" : 1623403049075,
          "duration" : 200099
        }
      }, {
        "uid" : "2813fff6b0bb63ce",
        "status" : "passed",
        "time" : {
          "start" : 1623390607915,
          "stop" : 1623390808014,
          "duration" : 200099
        }
      } ]
    },
    "tags" : [ "general", "@pytest.mark.usefixtures('setup_profiles')", "suiteA", "sanity", "setup", "sanity_light", "bridge" ]
  },
  "source" : "33d6d391af09142b.json",
  "parameterValues" : [ "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-02-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_open_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-02-SSID-open-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-02-SSID-wpa2_personal-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': False}" ]
}