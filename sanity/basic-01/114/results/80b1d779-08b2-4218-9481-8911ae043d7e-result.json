{"name": "test_wpa_wpa2_enterprise_2g[setup_profiles0]", "status": "skipped", "statusDetails": {"message": "XFAIL reason: SSID NOT AVAILABLE IN VIF STATE\n\n_pytest.outcomes.XFailed: SSID NOT AVAILABLE IN VIF STATE", "trace": "self = <tests.e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestBridgeModeEnterpriseTTLSSuiteTwo object at 0x7fe30c30e610>\nget_vif_state = ['TipWlan-cloud-wifi', 'TipWlan-cloud-wifi']\nstation_names_twog = ['wlan000']\nsetup_profiles = {'equipment_ap': True, 'radius_profile': True, 'vifc': False, 'vifs': True, ...}\nget_lanforge_data = {'lanforge-port-number': 8080, 'lanforge_2dot4g': '1.1.wiphy4', 'lanforge_2dot4g_prefix': 'wlan0', 'lanforge_2dot4g_station': 'wlan0', ...}\nlf_test = <lanforge.lf_tests.RunTest object at 0x7fe30c2e4640>\nupdate_report = <testrails.reporting.Reporting object at 0x7fe3280f50d0>\ntest_cases = []\nradius_info = {'ip': '10.10.10.72', 'name': 'basic-01-Automation-Radius-Profile-BRIDGE', 'password': 'password', 'pk_password': 'whatever', ...}\nexit_on_fail = False\n\n    @pytest.mark.wpa_wpa2_enterprise_mixed\n    @pytest.mark.twog\n    def test_wpa_wpa2_enterprise_2g(self, get_vif_state,\n                                    station_names_twog, setup_profiles, get_lanforge_data, lf_test, update_report,\n                                    test_cases, radius_info, exit_on_fail):\n        \"\"\" wpa enterprise 2g\n            pytest -m \"client_connectivity and bridge and enterprise and ttls and wpa_wpa2_enterprise_mixed and twog\"\n        \"\"\"\n        profile_data = setup_params_enterprise_two[\"ssid_modes\"][\"wpa_wpa2_enterprise_mixed\"][0]\n        ssid_name = profile_data[\"ssid_name\"]\n        security = \"wpa\"\n        extra_secu = [\"wpa2\"]\n        mode = \"BRIDGE\"\n        band = \"twog\"\n        vlan = 1\n        ttls_passwd = radius_info[\"password\"]\n        eap = \"TTLS\"\n        identity = radius_info['user']\n        if ssid_name not in get_vif_state:\n            allure.attach(name=\"retest,vif state ssid not available:\", body=str(get_vif_state))\n>           pytest.xfail(\"SSID NOT AVAILABLE IN VIF STATE\")\nE           _pytest.outcomes.XFailed: SSID NOT AVAILABLE IN VIF STATE\n\ne2e/basic/validation_of_operating_modes/bridge_mode/client_connectivity/test_enterprise_ttls.py:256: XFailed"}, "description": " wpa enterprise 2g\n            pytest -m \"client_connectivity and bridge and enterprise and ttls and wpa_wpa2_enterprise_mixed and twog\"\n        ", "attachments": [{"name": "retest,vif state ssid not available:", "source": "cb86ace3-4dac-48de-a377-23cedcdce1ef-attachment.attach"}], "parameters": [{"name": "setup_profiles", "value": "{'mode': 'BRIDGE', 'ssid_modes': {'wpa_wpa2_enterprise_mixed': [{'ssid_name': 'ssid_wpa_wpa2_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-01-SSID-wpa_wpa2_enterprise_mixed-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_wpa2_eap_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-01-SSID-wpa_wpa2_enterprise_mixed-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa3_enterprise_mixed': [{'ssid_name': 'ssid_wpa3_mixed_eap_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-01-SSID-wpa3_enterprise_mixed-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa3_mixed_eap_5g', 'appliedRadios': ['is5GHz'], 'profile_name': 'basic-01-SSID-wpa3_enterprise_mixed-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': True}"}], "start": 1628936274224, "stop": 1628936274224, "uuid": "8b6ed30a-c454-4603-b332-882af41ff18b", "historyId": "5f9a2058c16bccd592bbcda30aef1509", "testCaseId": "222fc9efb7c2f4d76f7818f98b6e8bfe", "fullName": "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls.TestBridgeModeEnterpriseTTLSSuiteTwo#test_wpa_wpa2_enterprise_2g", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "bridge"}, {"name": "tag", "value": "twog"}, {"name": "tag", "value": "suiteB"}, {"name": "tag", "value": "ucentral"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "enterprise"}, {"name": "tag", "value": "wpa_wpa2_enterprise_mixed"}, {"name": "tag", "value": "ttls"}, {"name": "tag", "value": "client_connectivity"}, {"name": "parentSuite", "value": "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity"}, {"name": "suite", "value": "test_enterprise_ttls"}, {"name": "subSuite", "value": "TestBridgeModeEnterpriseTTLSSuiteTwo"}, {"name": "host", "value": "testing-114-h5kl6"}, {"name": "thread", "value": "6-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.basic.validation_of_operating_modes.bridge_mode.client_connectivity.test_enterprise_ttls"}]}