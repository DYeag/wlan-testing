{
  "uid" : "15b440e752c9ea04",
  "name" : "test_verify_vif_state[setup_profiles0]",
  "fullName" : "e2e.basic.configuration_tests.bridge_mode.test_general_security_modes_configuration.TestSetupBridgeSuiteA#test_verify_vif_state",
  "historyId" : "4a66ab8af2119ef5d86b0a06d0301b9f",
  "time" : {
    "start" : 1624529864244,
    "stop" : 1624530064345,
    "duration" : 200101
  },
  "description" : " vifs SuiteA General ",
  "descriptionHtml" : "<p>vifs SuiteA General</p>\n",
  "status" : "broken",
  "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 10:21:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1200\",\n  \"timestamp\" : 1624530069189\n}",
  "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7f86708519a0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:612: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7f8671fd4940>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=1200'\nquery_params = [('profileId', 1200)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiIwMzEzOWI0OS1mY2I3LTQ3OGMtYjc0Yi1mYz...P/udXACFIhwkFd6YO3BkBdwIEQyt92et0H0', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 10:21:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=1200\",\nE             \"timestamp\" : 1624530069189\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup_controller",
    "time" : {
      "start" : 1624529014510,
      "stop" : 1624529014675,
      "duration" : 165
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cbc39df57a8465f0",
      "name" : "Controller Instantiated: ",
      "source" : "cbc39df57a8465f0.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan",
    "time" : {
      "start" : 1624529026621,
      "stop" : 1624529026621,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c43e15fdf7b42af0",
      "name" : "VLAN Created: ",
      "source" : "c43e15fdf7b42af0.attach",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "lf_tools",
    "time" : {
      "start" : 1624529026624,
      "stop" : 1624529028555,
      "duration" : 1931
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_lanforge_chamberview_dut",
    "time" : {
      "start" : 1624529028555,
      "stop" : 1624529031482,
      "duration" : 2927
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags",
    "time" : {
      "start" : 1624529026622,
      "stop" : 1624529026622,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile",
    "time" : {
      "start" : 1624529026621,
      "stop" : 1624529026621,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers",
    "time" : {
      "start" : 1624529026622,
      "stop" : 1624529026624,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d62e1756c276cbf",
      "name" : "Test Cases Requires: ",
      "source" : "d62e1756c276cbf.attach",
      "type" : "text/plain",
      "size" : 378
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_profiles",
    "time" : {
      "start" : 1624529726521,
      "stop" : 1624529864193,
      "duration" : 137672
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6cf234387f93ba0c",
      "name" : "RF Profile Created : wifi5",
      "source" : "6cf234387f93ba0c.attach",
      "type" : "text/plain",
      "size" : 44
    }, {
      "uid" : "78b858247011eba8",
      "name" : "SSID Profile Created",
      "source" : "78b858247011eba8.attach",
      "type" : "text/plain",
      "size" : 2808
    }, {
      "uid" : "1772ef3eedf3e09b",
      "name" : "SSID Profile Created",
      "source" : "1772ef3eedf3e09b.attach",
      "type" : "text/plain",
      "size" : 2826
    }, {
      "uid" : "1ad3b433d036de85",
      "name" : "SSID Profile Created",
      "source" : "1ad3b433d036de85.attach",
      "type" : "text/plain",
      "size" : 2801
    }, {
      "uid" : "28c7f7546c5fdc0c",
      "name" : "SSID Profile Created",
      "source" : "28c7f7546c5fdc0c.attach",
      "type" : "text/plain",
      "size" : 2819
    }, {
      "uid" : "eec115802e2dab70",
      "name" : "SSID Profile Created",
      "source" : "eec115802e2dab70.attach",
      "type" : "text/plain",
      "size" : 2817
    }, {
      "uid" : "907def13f05e5ae8",
      "name" : "SSID Profile Created",
      "source" : "907def13f05e5ae8.attach",
      "type" : "text/plain",
      "size" : 2835
    }, {
      "uid" : "1d31aae128d5ef73",
      "name" : "Equipment AP Profile Created",
      "source" : "1d31aae128d5ef73.attach",
      "type" : "text/plain",
      "size" : 48
    }, {
      "uid" : "26c4fc08167bfa63",
      "name" : "APNOS LIbrary: ",
      "source" : "26c4fc08167bfa63.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "76e1169823991608",
      "name" : "openwrt_ctl Setup",
      "source" : "76e1169823991608.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "b41fe47e0420548f",
      "name" : "vif config Output Msg: ",
      "source" : "b41fe47e0420548f.attach",
      "type" : "text/plain",
      "size" : 63
    }, {
      "uid" : "fc2998ff7b049a8c",
      "name" : "vif config Err Msg: ",
      "source" : "fc2998ff7b049a8c.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3900d19106ed827c",
      "name" : "get_vif_config_ssids ",
      "source" : "3900d19106ed827c.attach",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "8213cbabf404d8f8",
      "name" : "vif config Output Msg: ",
      "source" : "8213cbabf404d8f8.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "bc4f80e28ef04e81",
      "name" : "vif config Err Msg: ",
      "source" : "bc4f80e28ef04e81.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "1330d11107336b6a",
      "name" : "get_vif_config_ssids ",
      "source" : "1330d11107336b6a.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "74dfb1588834b2e6",
      "name" : "SSID Profiles in VIF Config and Controller: ",
      "source" : "74dfb1588834b2e6.attach",
      "type" : "text/plain",
      "size" : 230
    }, {
      "uid" : "af912b85c7e56a76",
      "name" : "APNOS LIbrary: ",
      "source" : "af912b85c7e56a76.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "2696f2ab1006ba30",
      "name" : "openwrt_ctl Setup",
      "source" : "2696f2ab1006ba30.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "a024cc010de7040a",
      "name" : "vif state Output Msg: ",
      "source" : "a024cc010de7040a.attach",
      "type" : "text/plain",
      "size" : 7667
    }, {
      "uid" : "af0628d66b7991b9",
      "name" : "vif state Err Msg: ",
      "source" : "af0628d66b7991b9.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6b5cff243bba8248",
      "name" : "get_vif_state_ssids ",
      "source" : "6b5cff243bba8248.attach",
      "type" : "text/plain",
      "size" : 64
    }, {
      "uid" : "fc69d3deea3ac663",
      "name" : "vif config Output Msg: ",
      "source" : "fc69d3deea3ac663.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "6b4034a56cc7a475",
      "name" : "vif config Err Msg: ",
      "source" : "6b4034a56cc7a475.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "4ff9e693a7355c53",
      "name" : "get_vif_config_ssids ",
      "source" : "4ff9e693a7355c53.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "d2f0cf71b02b3a62",
      "name" : "vif state Output Msg: ",
      "source" : "d2f0cf71b02b3a62.attach",
      "type" : "text/plain",
      "size" : 7667
    }, {
      "uid" : "12ef2ada722c30c2",
      "name" : "vif state Err Msg: ",
      "source" : "12ef2ada722c30c2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "9fbedc2b9598861a",
      "name" : "get_vif_state_ssids ",
      "source" : "9fbedc2b9598861a.attach",
      "type" : "text/plain",
      "size" : 64
    }, {
      "uid" : "beb4e0d80486116b",
      "name" : "vif config Output Msg: ",
      "source" : "beb4e0d80486116b.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "a8249c4d331eecc3",
      "name" : "vif config Err Msg: ",
      "source" : "a8249c4d331eecc3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "86484b33b6032e46",
      "name" : "get_vif_config_ssids ",
      "source" : "86484b33b6032e46.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "8fd1f410c6f94c55",
      "name" : "vif state Output Msg: ",
      "source" : "8fd1f410c6f94c55.attach",
      "type" : "text/plain",
      "size" : 7667
    }, {
      "uid" : "5a4981309dced7e3",
      "name" : "vif state Err Msg: ",
      "source" : "5a4981309dced7e3.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "d73b3a18b4e2d22c",
      "name" : "get_vif_state_ssids ",
      "source" : "d73b3a18b4e2d22c.attach",
      "type" : "text/plain",
      "size" : 64
    }, {
      "uid" : "ed6ce1091ede5a70",
      "name" : "vif config Output Msg: ",
      "source" : "ed6ce1091ede5a70.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "3e5c0f56693afef2",
      "name" : "vif config Err Msg: ",
      "source" : "3e5c0f56693afef2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "b6e943e198d46513",
      "name" : "get_vif_config_ssids ",
      "source" : "b6e943e198d46513.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "e9af52b5e5f1ecf2",
      "name" : "vif state Output Msg: ",
      "source" : "e9af52b5e5f1ecf2.attach",
      "type" : "text/plain",
      "size" : 4009
    }, {
      "uid" : "fc315d788402d2f2",
      "name" : "vif state Err Msg: ",
      "source" : "fc315d788402d2f2.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "3ec36fa9a9c380f5",
      "name" : "get_vif_state_ssids ",
      "source" : "3ec36fa9a9c380f5.attach",
      "type" : "text/plain",
      "size" : 32
    }, {
      "uid" : "5d5d812d749ab084",
      "name" : "vif config Output Msg: ",
      "source" : "5d5d812d749ab084.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "86addec1b60eb0ae",
      "name" : "vif config Err Msg: ",
      "source" : "86addec1b60eb0ae.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "423b81bb57d70cbf",
      "name" : "get_vif_config_ssids ",
      "source" : "423b81bb57d70cbf.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "c9860811bbf68d6",
      "name" : "vif state Output Msg: ",
      "source" : "c9860811bbf68d6.attach",
      "type" : "text/plain",
      "size" : 4009
    }, {
      "uid" : "68f235af38d1ac38",
      "name" : "vif state Err Msg: ",
      "source" : "68f235af38d1ac38.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "56491c18d0bbef25",
      "name" : "get_vif_state_ssids ",
      "source" : "56491c18d0bbef25.attach",
      "type" : "text/plain",
      "size" : 32
    }, {
      "uid" : "35c477864eaf021b",
      "name" : "vif config Output Msg: ",
      "source" : "35c477864eaf021b.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "637f7c297a78ad91",
      "name" : "vif config Err Msg: ",
      "source" : "637f7c297a78ad91.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "61b7c0c46da0337f",
      "name" : "get_vif_config_ssids ",
      "source" : "61b7c0c46da0337f.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "b39c36061cff923b",
      "name" : "vif state Output Msg: ",
      "source" : "b39c36061cff923b.attach",
      "type" : "text/plain",
      "size" : 4009
    }, {
      "uid" : "5e1499a466e5c811",
      "name" : "vif state Err Msg: ",
      "source" : "5e1499a466e5c811.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "64a31cfde9b70b05",
      "name" : "get_vif_state_ssids ",
      "source" : "64a31cfde9b70b05.attach",
      "type" : "text/plain",
      "size" : 32
    }, {
      "uid" : "aeda621efa195a20",
      "name" : "vif config Output Msg: ",
      "source" : "aeda621efa195a20.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "a5a377375ae45e2e",
      "name" : "vif config Err Msg: ",
      "source" : "a5a377375ae45e2e.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "20e95eb9923f30d9",
      "name" : "get_vif_config_ssids ",
      "source" : "20e95eb9923f30d9.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "bd5eafb6ecf64f6d",
      "name" : "vif state Output Msg: ",
      "source" : "bd5eafb6ecf64f6d.attach",
      "type" : "text/plain",
      "size" : 4043
    }, {
      "uid" : "9921752ac3290327",
      "name" : "vif state Err Msg: ",
      "source" : "9921752ac3290327.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "f73dade6cb05877b",
      "name" : "get_vif_state_ssids ",
      "source" : "f73dade6cb05877b.attach",
      "type" : "text/plain",
      "size" : 32
    }, {
      "uid" : "38fd63721e98fb00",
      "name" : "vif config Output Msg: ",
      "source" : "38fd63721e98fb00.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "2e43bc20c9e1727b",
      "name" : "vif config Err Msg: ",
      "source" : "2e43bc20c9e1727b.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "ac29f7b3fda16989",
      "name" : "get_vif_config_ssids ",
      "source" : "ac29f7b3fda16989.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "2cc80c4b7decb349",
      "name" : "vif state Output Msg: ",
      "source" : "2cc80c4b7decb349.attach",
      "type" : "text/plain",
      "size" : 11361
    }, {
      "uid" : "9f53a8f0318cb2bc",
      "name" : "vif state Err Msg: ",
      "source" : "9f53a8f0318cb2bc.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "6d757758cc84afa8",
      "name" : "get_vif_state_ssids ",
      "source" : "6d757758cc84afa8.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "6f989fec8e3aa12e",
      "name" : "vif config Output Msg: ",
      "source" : "6f989fec8e3aa12e.attach",
      "type" : "text/plain",
      "size" : 10091
    }, {
      "uid" : "3aaca6ae6b454103",
      "name" : "vif config Err Msg: ",
      "source" : "3aaca6ae6b454103.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "75ba7fd5f9f76cdf",
      "name" : "get_vif_config_ssids ",
      "source" : "75ba7fd5f9f76cdf.attach",
      "type" : "text/plain",
      "size" : 94
    }, {
      "uid" : "3705699fcb44be8d",
      "name" : "SSID Profiles in VIF Config and VIF State: ",
      "source" : "3705699fcb44be8d.attach",
      "type" : "text/plain",
      "size" : 212
    }, {
      "uid" : "430658bf72ad6f9e",
      "name" : "AP LOgs: ",
      "source" : "430658bf72ad6f9e.attach",
      "type" : "text/plain",
      "size" : 71175
    }, {
      "uid" : "e97b639546c3e58e",
      "name" : "vif state Output Msg: ",
      "source" : "e97b639546c3e58e.attach",
      "type" : "text/plain",
      "size" : 11361
    }, {
      "uid" : "4c1bd5e5a7a2ff5",
      "name" : "vif state Err Msg: ",
      "source" : "4c1bd5e5a7a2ff5.attach",
      "type" : "text/plain",
      "size" : 109
    }, {
      "uid" : "48fa3a33beaae277",
      "name" : "SSID DATA IN LF DUT",
      "source" : "48fa3a33beaae277.attach",
      "type" : "text/plain",
      "size" : 524
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 72,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "should_upload_firmware",
    "time" : {
      "start" : 1624529015598,
      "stop" : 1624529015598,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id",
    "time" : {
      "start" : 1624529014676,
      "stop" : 1624529015389,
      "duration" : 713
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware",
    "time" : {
      "start" : 1624529015598,
      "stop" : 1624529018189,
      "duration" : 2591
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "225952d5e3108362",
      "name" : "APNOS LIbrary: ",
      "source" : "225952d5e3108362.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "bf9c6dd7d726e5dd",
      "name" : "openwrt_ctl Setup",
      "source" : "bf9c6dd7d726e5dd.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "808ccba8f0883afb",
      "name" : "get_active_firmware ",
      "source" : "808ccba8f0883afb.attach",
      "type" : "text/plain",
      "size" : 34
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "test_cases",
    "time" : {
      "start" : 1624529020749,
      "stop" : 1624529020749,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point",
    "time" : {
      "start" : 1624529013022,
      "stop" : 1624529014510,
      "duration" : 1488
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3532251b3c0aeb90",
      "name" : "added openwrtctl.py to :",
      "source" : "3532251b3c0aeb90.attach",
      "type" : "text/plain",
      "size" : 14
    }, {
      "uid" : "77ff587cf1da1f25",
      "name" : "APNOS LIbrary: ",
      "source" : "77ff587cf1da1f25.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "fb523ee24eed6f2",
      "name" : "openwrt_ctl Setup",
      "source" : "fb523ee24eed6f2.attach",
      "type" : "text/plain",
      "size" : 9
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_latest_firmware",
    "time" : {
      "start" : 1624529015598,
      "stop" : 1624529015598,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware",
    "time" : {
      "start" : 1624529014676,
      "stop" : 1624529014676,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware",
    "time" : {
      "start" : 1624529015598,
      "stop" : 1624529015598,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud",
    "time" : {
      "start" : 1624529015389,
      "stop" : 1624529015597,
      "duration" : 208
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed",
    "time" : {
      "start" : 1624529013021,
      "stop" : 1624529013021,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e1d76b5a24520e20",
      "name" : "Testbed Selected : ",
      "source" : "e1d76b5a24520e20.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_test_run",
    "time" : {
      "start" : 1624529018190,
      "stop" : 1624529020748,
      "duration" : 2558
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "664a8a77c94a53b8",
      "name" : "APNOS LIbrary: ",
      "source" : "664a8a77c94a53b8.attach",
      "type" : "text/plain",
      "size" : 316
    }, {
      "uid" : "4aef636ef7800748",
      "name" : "openwrt_ctl Setup",
      "source" : "4aef636ef7800748.attach",
      "type" : "text/plain",
      "size" : 9
    }, {
      "uid" : "cc411065196343ed",
      "name" : "get_active_firmware ",
      "source" : "cc411065196343ed.attach",
      "type" : "text/plain",
      "size" : 34
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "get_apnos",
    "time" : {
      "start" : 1624529013022,
      "stop" : 1624529013022,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info",
    "time" : {
      "start" : 1624529031482,
      "stop" : 1624529031482,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "14e1e16492876873",
      "name" : "Radius server Info: ",
      "source" : "14e1e16492876873.attach",
      "type" : "text/plain",
      "size" : 126
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "update_report",
    "time" : {
      "start" : 1624529020748,
      "stop" : 1624529020749,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration",
    "time" : {
      "start" : 1624529013021,
      "stop" : 1624529013022,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "faf4fdc469f9835f",
      "name" : "Testbed Selected: ",
      "source" : "faf4fdc469f9835f.attach",
      "type" : "text/plain",
      "size" : 8
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : " vifs SuiteA General ",
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 10:21:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1200\",\n  \"timestamp\" : 1624530069189\n}",
    "statusTrace" : "self = <allure_commons._allure.fixture object at 0x7f86708519a0>, args = ()\nkwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\n/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py:200: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ne2e/basic/conftest.py:612: in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n../libs/controller/controller.py:1254: in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:150: in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py:209: in delete_profile_with_http_info\n    return self.api_client.call_api(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:316: in call_api\n    return self.__call_api(resource_path, method,\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:148: in __call_api\n    response_data = self.request(\n/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py:382: in request\n    return self.rest_client.DELETE(url,\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:259: in DELETE\n    return self.request(\"DELETE\", url,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_client.rest.RESTClientObject object at 0x7f8671fd4940>\nmethod = 'DELETE'\nurl = 'https://wlan-portal-svc-nola-02.cicd.lab.wlan.tip.build/portal/profile?profileId=1200'\nquery_params = [('profileId', 1200)]\nheaders = {'Accept': 'application/json', 'Authorization': 'Bearer eyJpc3MiOiJ0aXAiLCJqdGkiOiIwMzEzOWI0OS1mY2I3LTQ3OGMtYjc0Yi1mYz...P/udXACFIhwkFd6YO3BkBdwIEQyt92et0H0', 'Content-Type': 'application/json', 'User-Agent': 'Swagger-Codegen/1.0.0/python'}\nbody = None, post_params = {}, _preload_content = True, _request_timeout = None\n\n    def request(self, method, url, query_params=None, headers=None,\n                body=None, post_params=None, _preload_content=True,\n                _request_timeout=None):\n        \"\"\"Perform requests.\n    \n        :param method: http request method\n        :param url: http request url\n        :param query_params: query parameters in the url\n        :param headers: http request headers\n        :param body: request json body, for `application/json`\n        :param post_params: request post parameters,\n                            `application/x-www-form-urlencoded`\n                            and `multipart/form-data`\n        :param _preload_content: if False, the urllib3.HTTPResponse object will\n                                 be returned without reading/decoding response\n                                 data. Default is True.\n        :param _request_timeout: timeout setting for this request. If one\n                                 number provided, it will be total request\n                                 timeout. It can also be a pair (tuple) of\n                                 (connection, read) timeouts.\n        \"\"\"\n        method = method.upper()\n        assert method in ['GET', 'HEAD', 'DELETE', 'POST', 'PUT',\n                          'PATCH', 'OPTIONS']\n    \n        if post_params and body:\n            raise ValueError(\n                \"body parameter cannot be used with post_params parameter.\"\n            )\n    \n        post_params = post_params or {}\n        headers = headers or {}\n    \n        timeout = None\n        if _request_timeout:\n            if isinstance(_request_timeout, (int, ) if six.PY3 else (int, long)):  # noqa: E501,F821\n                timeout = urllib3.Timeout(total=_request_timeout)\n            elif (isinstance(_request_timeout, tuple) and\n                  len(_request_timeout) == 2):\n                timeout = urllib3.Timeout(\n                    connect=_request_timeout[0], read=_request_timeout[1])\n    \n        if 'Content-Type' not in headers:\n            headers['Content-Type'] = 'application/json'\n    \n        try:\n            # For `POST`, `PUT`, `PATCH`, `OPTIONS`, `DELETE`\n            if method in ['POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']:\n                if query_params:\n                    url += '?' + urlencode(query_params)\n                if re.search('json', headers['Content-Type'], re.IGNORECASE):\n                    request_body = '{}'\n                    if body is not None:\n                        request_body = json.dumps(body)\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'application/x-www-form-urlencoded':  # noqa: E501\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=False,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                elif headers['Content-Type'] == 'multipart/form-data':\n                    # must del headers['Content-Type'], or the correct\n                    # Content-Type which generated by urllib3 will be\n                    # overwritten.\n                    del headers['Content-Type']\n                    r = self.pool_manager.request(\n                        method, url,\n                        fields=post_params,\n                        encode_multipart=True,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                # Pass a `string` parameter directly in the body to support\n                # other content types than Json when `body` argument is\n                # provided in serialized form\n                elif isinstance(body, str):\n                    request_body = body\n                    r = self.pool_manager.request(\n                        method, url,\n                        body=request_body,\n                        preload_content=_preload_content,\n                        timeout=timeout,\n                        headers=headers)\n                else:\n                    # Cannot generate the request from given parameters\n                    msg = \"\"\"Cannot prepare a request message for provided\n                             arguments. Please check that your arguments match\n                             declared content type.\"\"\"\n                    raise ApiException(status=0, reason=msg)\n            # For `GET`, `HEAD`\n            else:\n                r = self.pool_manager.request(method, url,\n                                              fields=query_params,\n                                              preload_content=_preload_content,\n                                              timeout=timeout,\n                                              headers=headers)\n        except urllib3.exceptions.SSLError as e:\n            msg = \"{0}\\n{1}\".format(type(e).__name__, str(e))\n            raise ApiException(status=0, reason=msg)\n    \n        if _preload_content:\n            r = RESTResponse(r)\n    \n            # In the python 3, the response.data is bytes.\n            # we need to decode it to string.\n            if six.PY3:\n                r.data = r.data.decode('utf8')\n    \n            # log response body\n            logger.debug(\"response body: %s\", r.data)\n    \n        if not 200 <= r.status <= 299:\n>           raise ApiException(http_resp=r)\nE           swagger_client.rest.ApiException: (500)\nE           Reason: \nE           HTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 10:21:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nE           HTTP response body: {\nE             \"model_type\" : \"JsonSerializedException\",\nE             \"exType\" : \"DsEntityNotFoundException\",\nE             \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\nE             \"path\" : \"/portal/profile?profileId=1200\",\nE             \"timestamp\" : 1624530069189\nE           }\n\n/usr/local/lib/python3.8/site-packages/swagger_client/rest.py:227: ApiException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8b5aacdb2a865f20",
      "name" : "profile pushed successfully",
      "source" : "8b5aacdb2a865f20.attach",
      "type" : "application/octet-stream",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_controller::1",
    "time" : {
      "start" : 1624539363854,
      "stop" : 1624539363854,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_controller::teardown_controller",
    "time" : {
      "start" : 1624539363854,
      "stop" : 1624539363855,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "40aa5e9a48dda200",
      "name" : "Controller Teardown: ",
      "source" : "40aa5e9a48dda200.attach",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "setup_vlan::0",
    "time" : {
      "start" : 1624539363705,
      "stop" : 1624539363705,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "lf_tools::0",
    "time" : {
      "start" : 1624539363678,
      "stop" : 1624539363678,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_security_flags::0",
    "time" : {
      "start" : 1624539363694,
      "stop" : 1624539363694,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_profile::0",
    "time" : {
      "start" : 1624539363699,
      "stop" : 1624539363699,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_markers::0",
    "time" : {
      "start" : 1624539363683,
      "stop" : 1624539363683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::1",
    "time" : {
      "start" : 1624530064345,
      "stop" : 1624530064345,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_profiles::teardown_session",
    "time" : {
      "start" : 1624530064345,
      "stop" : 1624530069193,
      "duration" : 4848
    },
    "status" : "broken",
    "statusMessage" : "swagger_client.rest.ApiException: (500)\nReason: \nHTTP response headers: HTTPHeaderDict({'Date': 'Thu, 24 Jun 2021 10:21:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'POST, PATCH, PUT, HEAD, GET, OPTIONS, DELETE', 'Access-Control-Max-Age': '10', 'Access-Control-Allow-Headers': 'x-requested-with,Content-Type,content-type,Authorization', 'Access-Control-Allow-Credentials': 'true', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Strict-Transport-Security': 'max-age=31536000 ; includeSubDomains', 'X-Frame-Options': 'DENY', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'vary': 'accept-encoding'})\nHTTP response body: {\n  \"model_type\" : \"JsonSerializedException\",\n  \"exType\" : \"DsEntityNotFoundException\",\n  \"error\" : \"org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0\",\n  \"path\" : \"/portal/profile?profileId=1200\",\n  \"timestamp\" : 1624530069189\n}\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/allure_commons/_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/wlan-testing/tests/e2e/basic/conftest.py\", line 612, in teardown_session\n    instantiate_profile.delete_profile(instantiate_profile.profile_creation_ids[\"ssid\"])\n  File \"/wlan-testing/tests/../libs/controller/controller.py\", line 1254, in delete_profile\n    self.profile_client.delete_profile(profile_id=i)\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 150, in delete_profile\n    (data) = self.delete_profile_with_http_info(profile_id, **kwargs)  # noqa: E501\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api/profile_api.py\", line 209, in delete_profile_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 316, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 148, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/api_client.py\", line 382, in request\n    return self.rest_client.DELETE(url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 259, in DELETE\n    return self.request(\"DELETE\", url,\n  File \"/usr/local/lib/python3.8/site-packages/swagger_client/rest.py\", line 227, in request\n    raise ApiException(http_resp=r)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "should_upload_firmware::0",
    "time" : {
      "start" : 1624539363726,
      "stop" : 1624539363726,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_equipment_id::0",
    "time" : {
      "start" : 1624539363782,
      "stop" : 1624539363782,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "upgrade_firmware::0",
    "time" : {
      "start" : 1624539363719,
      "stop" : 1624539363719,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_cases::0",
    "time" : {
      "start" : 1624539363707,
      "stop" : 1624539363707,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_access_point::0",
    "time" : {
      "start" : 1624539363863,
      "stop" : 1624539363863,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_latest_firmware::0",
    "time" : {
      "start" : 1624539363746,
      "stop" : 1624539363747,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "instantiate_firmware::0",
    "time" : {
      "start" : 1624539363810,
      "stop" : 1624539363810,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "should_upgrade_firmware::0",
    "time" : {
      "start" : 1624539363734,
      "stop" : 1624539363735,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_ap_firmware_cloud::0",
    "time" : {
      "start" : 1624539363755,
      "stop" : 1624539363755,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testbed::0",
    "time" : {
      "start" : 1624539364023,
      "stop" : 1624539364023,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_test_run::0",
    "time" : {
      "start" : 1624539363712,
      "stop" : 1624539363713,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_apnos::0",
    "time" : {
      "start" : 1624539363931,
      "stop" : 1624539363932,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "radius_info::0",
    "time" : {
      "start" : 1624539363661,
      "stop" : 1624539363661,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "update_report::0",
    "time" : {
      "start" : 1624539363706,
      "stop" : 1624539363706,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_configuration::0",
    "time" : {
      "start" : 1624539363989,
      "stop" : 1624539363989,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "feature",
    "value" : "BRIDGE MODE SETUP"
  }, {
    "name" : "tag",
    "value" : "sanity_light"
  }, {
    "name" : "tag",
    "value" : "suiteA"
  }, {
    "name" : "tag",
    "value" : "bridge"
  }, {
    "name" : "tag",
    "value" : "general"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_profiles')"
  }, {
    "name" : "tag",
    "value" : "setup"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "parentSuite",
    "value" : "e2e.basic.configuration_tests.bridge_mode"
  }, {
    "name" : "suite",
    "value" : "test_general_security_modes_configuration"
  }, {
    "name" : "subSuite",
    "value" : "TestSetupBridgeSuiteA"
  }, {
    "name" : "host",
    "value" : "testing-24-r7xhh"
  }, {
    "name" : "thread",
    "value" : "6-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "e2e.basic.configuration_tests.bridge_mode.test_general_security_modes_configuration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "setup_profiles",
    "value" : "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-01-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_open_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-01-SSID-open-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa2_personal-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa2_personal-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': False}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "general", "@pytest.mark.usefixtures('setup_profiles')", "suiteA", "setup", "sanity", "sanity_light", "bridge" ]
  },
  "source" : "15b440e752c9ea04.json",
  "parameterValues" : [ "{'mode': 'BRIDGE', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g', 'appliedRadios': ['is2dot4GHz'], 'profile_name': 'basic-01-SSID-open-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_open_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'profile_name': 'basic-01-SSID-open-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa': [{'ssid_name': 'ssid_wpa_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g', 'appliedRadios': ['is2dot4GHz'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa2_personal-0-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}, {'ssid_name': 'ssid_wpa2_5g', 'appliedRadios': ['is5GHzU', 'is5GHz', 'is5GHzL'], 'security_key': 'something', 'profile_name': 'basic-01-SSID-wpa2_personal-1-BRIDGE', 'mode': 'BRIDGE', 'vlan': 1}]}, 'rf': {}, 'radius': False}" ]
}