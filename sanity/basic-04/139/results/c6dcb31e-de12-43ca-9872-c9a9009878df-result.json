{"name": "test_wpa_wpa2_personal_ssid_5g[setup_profiles0]", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <tests.e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity.test_general_security_modes.TestNATModeConnectivitySuiteB object at 0x7f628051adf0>\nget_vif_state = ['ssid_wpa2_eap_2g', 'ssid_wpa2_eap_5g', 'ssid_wpa3_eap_2g', 'ssid_wpa3_eap_5g', 'ssid_wpa2_eap_2g', 'ssid_wpa2_eap_5g', ...]\nget_ap_logs = None, station_names_fiveg = ['wlan000']\nget_lanforge_data = {'lanforge-port-number': 8080, 'lanforge_2dot4g': '1.1.wiphy4', 'lanforge_2dot4g_prefix': 'wlan0', 'lanforge_2dot4g_station': 'wlan0', ...}\nlf_test = <lanforge.lf_tests.RunTest object at 0x7f6282928b80>, test_cases = []\nupdate_report = <testrails.reporting.Reporting object at 0x7f62829281c0>\n\n    @pytest.mark.wpa_wpa2_personal_mixed\n    @pytest.mark.fiveg\n    @allure.story('wpa wpa2 personal mixed 5 GHZ Band')\n    def test_wpa_wpa2_personal_ssid_5g(self, get_vif_state, get_ap_logs,\n                                       station_names_fiveg, get_lanforge_data, lf_test, test_cases,\n                                       update_report):\n        \"\"\"Client Connectivity open ssid 2.4G\n           pytest -m \"client_connectivity and NAT and general and wpa_wpa2_personal_mixed and fiveg\"\n        \"\"\"\n        profile_data = setup_params_general_two[\"ssid_modes\"][\"wpa_wpa2_personal_mixed\"][1]\n        ssid_name = profile_data[\"ssid_name\"]\n        security_key = profile_data[\"security_key\"]\n        security = \"wpa\"\n        extra_secu = [\"wpa2\"]\n        mode = \"NAT\"\n        band = \"fiveg\"\n        vlan = 1\n        get_vif_state.append(ssid_name)\n        if ssid_name not in get_vif_state:\n            allure.attach(name=\"retest,vif state ssid not available:\", body=str(get_vif_state))\n            pytest.xfail(\"SSID NOT AVAILABLE IN VIF STATE\")\n>       passes, result = lf_test.Client_Connectivity(ssid=ssid_name, security=security, extra_securities=extra_secu,\n                                                     passkey=security_key, mode=mode, band=band,\n                                                     station_name=station_names_fiveg, vlan_id=vlan)\n\ne2e/basic/validation_of_operating_modes/nat_mode/client_connectivity/test_general_security_modes.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lanforge.lf_tests.RunTest object at 0x7f6282928b80>\nssid = 'ssid_wpa_wpa2_p_m_5g', passkey = 'something', security = 'wpa'\nextra_securities = ['wpa2'], station_name = ['wlan000'], mode = 'NAT'\nvlan_id = 1, band = 'fiveg'\n\n    def Client_Connectivity(self, ssid=\"[BLANK]\", passkey=\"[BLANK]\", security=\"open\", extra_securities=[],\n                            station_name=[], mode=\"BRIDGE\", vlan_id=1, band=\"twog\"):\n        \"\"\"SINGLE CLIENT CONNECTIVITY using test_connect2.py\"\"\"\n        self.staConnect = StaConnect2(self.lanforge_ip, self.lanforge_port, debug_=self.debug)\n        self.staConnect.sta_mode = 0\n        self.staConnect.upstream_resource = 1\n        if mode == \"BRIDGE\":\n            self.staConnect.upstream_port = self.upstream_port\n        elif mode == \"NAT\":\n            self.staConnect.upstream_port = self.upstream_port\n        else:\n            self.staConnect.upstream_port = self.upstream_port + \".\" + str(vlan_id)\n        if band == \"twog\":\n            self.staConnect.radio = self.twog_radios[0]\n            self.staConnect.sta_prefix = self.twog_prefix\n        if band == \"fiveg\":\n            self.staConnect.radio = self.fiveg_radios[0]\n            self.staConnect.sta_prefix = self.fiveg_prefix\n        self.staConnect.resource = 1\n        self.staConnect.dut_ssid = ssid\n        self.staConnect.dut_passwd = passkey\n        self.staConnect.dut_security = security\n        self.staConnect.station_names = station_name\n        self.staConnect.runtime_secs = 40\n        self.staConnect.bringup_time_sec = 80\n        self.staConnect.cleanup_on_exit = True\n        # self.staConnect.cleanup()\n        self.staConnect.setup(extra_securities=extra_securities)\n        self.staConnect.start()\n        print(\"napping %f sec\" % self.staConnect.runtime_secs)\n        time.sleep(self.staConnect.runtime_secs)\n        for sta_name in self.staConnect.station_names:\n            try:\n                station_data_str = \"\"\n                sta_url = self.staConnect.get_station_url(sta_name)\n                station_info = self.staConnect.json_get(sta_url)\n                for i in station_info[\"interface\"]:\n                    try:\n                        station_data_str = station_data_str + i + \"  :  \" + str(station_info[\"interface\"][i]) + \"\\n\"\n                    except Exception as e:\n                        print(e)\n                allure.attach(name=str(sta_name), body=str(station_data_str))\n            except Exception as e:\n                print(e)\n        self.staConnect.stop()\n        self.staConnect.cleanup()\n        run_results = self.staConnect.get_result_list()\n        for result in run_results:\n            print(\"test result: \" + result)\n        result = True\n        print(\"Client Connectivity :\", self.staConnect.passes)\n        endp_data = []\n        for i in self.staConnect.resulting_endpoints:\n>           endp_data.append(self.staConnect.resulting_endpoints[i][\"endpoint\"])\nE           TypeError: 'NoneType' object is not subscriptable\n\n../libs/lanforge/lf_tests.py:127: TypeError"}, "description": "Client Connectivity open ssid 2.4G\n           pytest -m \"client_connectivity and NAT and general and wpa_wpa2_personal_mixed and fiveg\"\n        ", "attachments": [{"name": "wlan000", "source": "74713df5-53ed-4d7c-8cc0-5680a0414eb7-attachment.attach"}], "parameters": [{"name": "setup_profiles", "value": "{'mode': 'NAT', 'ssid_modes': {'wpa3_personal': [{'ssid_name': 'ssid_wpa3_p_2g', 'appliedRadios': ['2G'], 'security_key': 'something', 'security': 'sae'}, {'ssid_name': 'ssid_wpa3_p_5g', 'appliedRadios': ['5G'], 'security_key': 'something', 'security': 'sae'}], 'wpa3_personal_mixed': [{'ssid_name': 'ssid_wpa3_p_m_2g', 'appliedRadios': ['2G'], 'security_key': 'something', 'security': 'sae-mixed'}, {'ssid_name': 'ssid_wpa3_p_m_5g', 'appliedRadios': ['5G'], 'security_key': 'something', 'security': 'sae-mixed'}], 'wpa_wpa2_personal_mixed': [{'ssid_name': 'ssid_wpa_wpa2_p_m_2g', 'appliedRadios': ['2G'], 'security_key': 'something', 'security': 'psk-mixed'}, {'ssid_name': 'ssid_wpa_wpa2_p_m_5g', 'appliedRadios': ['5G'], 'security_key': 'something', 'security': 'psk-mixed'}]}, 'rf': {}, 'radius': False}"}], "start": 1631668649566, "stop": 1631668815129, "uuid": "ce871211-3ec5-4e2e-a0bd-3d9a8e90dddc", "historyId": "6e41739a1d731889db78b2de6bb2411c", "testCaseId": "ab4f9848678817949193f42176eab71d", "fullName": "e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity.test_general_security_modes.TestNATModeConnectivitySuiteB#test_wpa_wpa2_personal_ssid_5g", "labels": [{"name": "story", "value": "wpa wpa2 personal mixed 5 GHZ Band"}, {"name": "feature", "value": "NAT MODE CLIENT CONNECTIVITY"}, {"name": "tag", "value": "suiteB"}, {"name": "tag", "value": "nat"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "wpa_wpa2_personal_mixed"}, {"name": "tag", "value": "uc_sanity"}, {"name": "tag", "value": "general"}, {"name": "tag", "value": "fiveg"}, {"name": "tag", "value": "ucentral"}, {"name": "tag", "value": "client_connectivity"}, {"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity"}, {"name": "suite", "value": "test_general_security_modes"}, {"name": "subSuite", "value": "TestNATModeConnectivitySuiteB"}, {"name": "host", "value": "testing-139-zr859"}, {"name": "thread", "value": "6-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.basic.validation_of_operating_modes.nat_mode.client_connectivity.test_general_security_modes"}]}